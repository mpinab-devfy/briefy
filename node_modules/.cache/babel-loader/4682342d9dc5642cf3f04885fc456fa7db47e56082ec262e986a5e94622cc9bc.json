{"ast":null,"code":"var _jsxFileName = \"/Users/matheuspina/Desktop/briefy-new/src/components/FlowchartViewer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport { ReactFlow, Background, Controls, MiniMap, useNodesState, useEdgesState, Handle, Position, addEdge } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { Maximize2, Minimize2, Plus, Download, RotateCcw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Custom node component\nconst CustomNode = ({\n  data,\n  type\n}) => {\n  const getNodeStyle = () => {\n    switch (type) {\n      case 'input':\n        return 'bg-green-100 border-green-500 text-green-800';\n      case 'process':\n        return 'bg-blue-100 border-blue-500 text-blue-800';\n      case 'output':\n        return 'bg-purple-100 border-purple-500 text-purple-800';\n      case 'decision':\n        return 'bg-yellow-100 border-yellow-500 text-yellow-800';\n      default:\n        return 'bg-gray-100 border-gray-500 text-gray-800';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `px-4 py-2 rounded-md border-2 shadow-md ${getNodeStyle()}`,\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm font-medium\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst nodeTypes = {\n  input: CustomNode,\n  process: CustomNode,\n  output: CustomNode,\n  decision: CustomNode\n};\nconst FlowchartViewer = ({\n  flowchart,\n  onFlowchartChange\n}) => {\n  _s();\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const reactFlowWrapper = useRef(null);\n  const reactFlowInstance = useRef(null);\n\n  // Convert our custom nodes to ReactFlow format\n  const initialNodes = flowchart.nodes.map(node => ({\n    id: node.id,\n    type: node.type,\n    position: node.position,\n    data: {\n      label: node.label\n    }\n  }));\n\n  // Convert our custom edges to ReactFlow format\n  const initialEdges = flowchart.edges.map(edge => ({\n    id: edge.id,\n    source: edge.source,\n    target: edge.target,\n    label: edge.label,\n    type: 'smoothstep'\n  }));\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(params => {\n    if (!params.source || !params.target) return;\n    const newEdge = {\n      id: `edge-${Date.now()}`,\n      source: params.source,\n      target: params.target,\n      type: 'smoothstep'\n    };\n    setEdges(eds => addEdge(newEdge, eds));\n\n    // Notify parent component of changes\n    if (onFlowchartChange) {\n      const updatedFlowchart = {\n        nodes: nodes.map(node => ({\n          id: node.id,\n          type: node.type,\n          label: node.data.label,\n          position: node.position\n        })),\n        edges: [...edges.map(edge => ({\n          id: edge.id,\n          source: edge.source,\n          target: edge.target,\n          label: typeof edge.label === 'string' ? edge.label : undefined\n        })), {\n          id: newEdge.id,\n          source: newEdge.source,\n          target: newEdge.target,\n          label: undefined\n        }]\n      };\n      onFlowchartChange(updatedFlowchart);\n    }\n  }, [nodes, edges, setEdges, onFlowchartChange]);\n  const toggleFullscreen = () => {\n    setIsFullscreen(!isFullscreen);\n  };\n  const addNewNode = type => {\n    const newNode = {\n      id: `node-${Date.now()}`,\n      type,\n      position: {\n        x: Math.random() * 400 + 100,\n        y: Math.random() * 300 + 100\n      },\n      data: {\n        label: `Novo ${type === 'input' ? 'Início' : type === 'output' ? 'Fim' : type === 'decision' ? 'Decisão' : 'Processo'}`\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n\n    // Notify parent component of changes\n    if (onFlowchartChange) {\n      const updatedFlowchart = {\n        nodes: [...nodes.map(node => ({\n          id: node.id,\n          type: node.type,\n          label: node.data.label,\n          position: node.position\n        })), {\n          id: newNode.id,\n          type: newNode.type,\n          label: newNode.data.label,\n          position: newNode.position\n        }],\n        edges: edges.map(edge => ({\n          id: edge.id,\n          source: edge.source,\n          target: edge.target,\n          label: typeof edge.label === 'string' ? edge.label : undefined\n        }))\n      };\n      onFlowchartChange(updatedFlowchart);\n    }\n  };\n  const exportToJson = () => {\n    const flowchartData = {\n      nodes: nodes.map(node => ({\n        id: node.id,\n        type: node.type,\n        label: node.data.label,\n        position: node.position\n      })),\n      edges: edges.map(edge => ({\n        id: edge.id,\n        source: edge.source,\n        target: edge.target,\n        label: typeof edge.label === 'string' ? edge.label : undefined\n      }))\n    };\n    const dataStr = JSON.stringify(flowchartData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const link = document.createElement('a');\n    link.setAttribute('href', dataUri);\n    link.setAttribute('download', 'fluxograma.json');\n    link.click();\n  };\n  const resetView = () => {\n    if (reactFlowInstance.current) {\n      reactFlowInstance.current.fitView();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `bg-white shadow rounded-lg ${isFullscreen ? 'fixed inset-0 z-50 p-4' : 'p-6'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900\",\n        children: \"Fluxograma do Projeto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1 mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addNewNode('input'),\n            className: \"px-3 py-1 bg-green-500 text-white text-xs rounded hover:bg-green-600\",\n            title: \"Adicionar In\\xEDcio\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addNewNode('process'),\n            className: \"px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600\",\n            title: \"Adicionar Processo\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addNewNode('decision'),\n            className: \"px-3 py-1 bg-yellow-500 text-white text-xs rounded hover:bg-yellow-600\",\n            title: \"Adicionar Decis\\xE3o\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addNewNode('output'),\n            className: \"px-3 py-1 bg-purple-500 text-white text-xs rounded hover:bg-purple-600\",\n            title: \"Adicionar Fim\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetView,\n          className: \"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\",\n          title: \"Resetar Visualiza\\xE7\\xE3o\",\n          children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToJson,\n          className: \"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\",\n          title: \"Exportar como JSON\",\n          children: /*#__PURE__*/_jsxDEV(Download, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFullscreen,\n          className: \"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\",\n          title: isFullscreen ? 'Sair da Tela Cheia' : 'Tela Cheia',\n          children: isFullscreen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), flowchart.nodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-12 text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum fluxograma gerado ainda.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Fa\\xE7a upload de documentos e clique em \\\"Gerar Escopo e Tasks\\\" para criar o fluxograma.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reactFlowWrapper,\n      className: `${isFullscreen ? 'h-[calc(100vh-120px)]' : 'h-96'} w-full border border-gray-200 rounded-lg`,\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        ref: reactFlowInstance,\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        fitView: true,\n        nodesDraggable: true,\n        nodesConnectable: true,\n        elementsSelectable: true,\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), flowchart.nodes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"N\\xF3s:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), \" \", nodes.length, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Conex\\xF5es:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), \" \", edges.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(FlowchartViewer, \"aU7PIXLA4NO1Y8hC98Q+snnQUJs=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = FlowchartViewer;\nexport default FlowchartViewer;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"FlowchartViewer\");","map":{"version":3,"names":["React","useState","useCallback","useRef","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","Handle","Position","addEdge","Maximize2","Minimize2","Plus","Download","RotateCcw","jsxDEV","_jsxDEV","CustomNode","data","type","getNodeStyle","className","children","position","Top","fileName","_jsxFileName","lineNumber","columnNumber","label","Bottom","_c","nodeTypes","input","process","output","decision","FlowchartViewer","flowchart","onFlowchartChange","_s","isFullscreen","setIsFullscreen","reactFlowWrapper","reactFlowInstance","initialNodes","nodes","map","node","id","initialEdges","edges","edge","source","target","setNodes","onNodesChange","setEdges","onEdgesChange","onConnect","params","newEdge","Date","now","eds","updatedFlowchart","undefined","toggleFullscreen","addNewNode","newNode","x","Math","random","y","nds","exportToJson","flowchartData","dataStr","JSON","stringify","dataUri","encodeURIComponent","link","document","createElement","setAttribute","click","resetView","current","fitView","onClick","title","length","ref","nodesDraggable","nodesConnectable","elementsSelectable","_c2","$RefreshReg$"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/components/FlowchartViewer.tsx"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport {\n  ReactFlow,\n  Node,\n  Edge,\n  Background,\n  Controls,\n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  Position,\n  addEdge,\n  Connection,\n  Edge as ReactFlowEdge,\n  Node as ReactFlowNode\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport {\n  Maximize2,\n  Minimize2,\n  Plus,\n  Download,\n  ZoomIn,\n  ZoomOut,\n  RotateCcw,\n  Save\n} from 'lucide-react';\n\nimport { FlowchartNode, FlowchartEdge } from '../types';\n\ninterface FlowchartViewerProps {\n  flowchart: {\n    nodes: FlowchartNode[];\n    edges: FlowchartEdge[];\n  };\n  onFlowchartChange?: (flowchart: { nodes: FlowchartNode[]; edges: FlowchartEdge[] }) => void;\n}\n\n// Custom node component\nconst CustomNode = ({ data, type }: any) => {\n  const getNodeStyle = () => {\n    switch (type) {\n      case 'input': \n        return 'bg-green-100 border-green-500 text-green-800';\n      case 'process':\n        return 'bg-blue-100 border-blue-500 text-blue-800';\n      case 'output':\n        return 'bg-purple-100 border-purple-500 text-purple-800';\n      case 'decision':\n        return 'bg-yellow-100 border-yellow-500 text-yellow-800';\n      default:\n        return 'bg-gray-100 border-gray-500 text-gray-800';\n    }\n  };\n\n  return (\n    <div className={`px-4 py-2 rounded-md border-2 shadow-md ${getNodeStyle()}`}>\n      <Handle type=\"target\" position={Position.Top} />\n      <div className=\"text-sm font-medium\">{data.label}</div>\n      <Handle type=\"source\" position={Position.Bottom} />\n    </div>\n  );\n};\n\nconst nodeTypes = {\n  input: CustomNode,\n  process: CustomNode,\n  output: CustomNode,\n  decision: CustomNode,\n};\n\nconst FlowchartViewer: React.FC<FlowchartViewerProps> = ({\n  flowchart,\n  onFlowchartChange\n}) => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const reactFlowWrapper = useRef<HTMLDivElement>(null);\n  const reactFlowInstance = useRef<any>(null);\n\n  // Convert our custom nodes to ReactFlow format\n  const initialNodes: Node[] = flowchart.nodes.map(node => ({\n    id: node.id,\n    type: node.type,\n    position: node.position,\n    data: { label: node.label }\n  }));\n\n  // Convert our custom edges to ReactFlow format\n  const initialEdges: Edge[] = flowchart.edges.map(edge => ({\n    id: edge.id,\n    source: edge.source,\n    target: edge.target,\n    label: edge.label,\n    type: 'smoothstep'\n  }));\n\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onConnect = useCallback(\n    (params: Connection) => {\n      if (!params.source || !params.target) return;\n\n      const newEdge: ReactFlowEdge = {\n        id: `edge-${Date.now()}`,\n        source: params.source,\n        target: params.target,\n        type: 'smoothstep'\n      };\n      setEdges((eds) => addEdge(newEdge, eds));\n\n      // Notify parent component of changes\n      if (onFlowchartChange) {\n        const updatedFlowchart = {\n          nodes: nodes.map(node => ({\n            id: node.id,\n            type: node.type as 'input' | 'process' | 'output' | 'decision',\n            label: node.data.label,\n            position: node.position\n          })),\n          edges: [...edges.map(edge => ({\n            id: edge.id,\n            source: edge.source,\n            target: edge.target,\n            label: typeof edge.label === 'string' ? edge.label : undefined\n          })), {\n            id: newEdge.id,\n            source: newEdge.source,\n            target: newEdge.target,\n            label: undefined\n          }]\n        };\n        onFlowchartChange(updatedFlowchart);\n      }\n    },\n    [nodes, edges, setEdges, onFlowchartChange]\n  );\n\n  const toggleFullscreen = () => {\n    setIsFullscreen(!isFullscreen);\n  };\n\n  const addNewNode = (type: 'input' | 'process' | 'output' | 'decision') => {\n    const newNode: ReactFlowNode = {\n      id: `node-${Date.now()}`,\n      type,\n      position: {\n        x: Math.random() * 400 + 100,\n        y: Math.random() * 300 + 100\n      },\n      data: { label: `Novo ${type === 'input' ? 'Início' : type === 'output' ? 'Fim' : type === 'decision' ? 'Decisão' : 'Processo'}` }\n    };\n\n    setNodes((nds) => [...nds, newNode]);\n\n    // Notify parent component of changes\n    if (onFlowchartChange) {\n      const updatedFlowchart = {\n        nodes: [...nodes.map(node => ({\n          id: node.id,\n          type: node.type as 'input' | 'process' | 'output' | 'decision',\n          label: node.data.label,\n          position: node.position\n        })), {\n          id: newNode.id,\n          type: newNode.type as 'input' | 'process' | 'output' | 'decision',\n          label: newNode.data.label,\n          position: newNode.position\n        }],\n        edges: edges.map(edge => ({\n          id: edge.id,\n          source: edge.source,\n          target: edge.target,\n          label: typeof edge.label === 'string' ? edge.label : undefined\n        }))\n      };\n      onFlowchartChange(updatedFlowchart);\n    }\n  };\n\n  const exportToJson = () => {\n    const flowchartData = {\n      nodes: nodes.map(node => ({\n        id: node.id,\n        type: node.type as 'input' | 'process' | 'output' | 'decision',\n        label: node.data.label,\n        position: node.position\n      })),\n      edges: edges.map(edge => ({\n        id: edge.id,\n        source: edge.source,\n        target: edge.target,\n        label: typeof edge.label === 'string' ? edge.label : undefined\n      }))\n    };\n\n    const dataStr = JSON.stringify(flowchartData, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n\n    const link = document.createElement('a');\n    link.setAttribute('href', dataUri);\n    link.setAttribute('download', 'fluxograma.json');\n    link.click();\n  };\n\n  const resetView = () => {\n    if (reactFlowInstance.current) {\n      reactFlowInstance.current.fitView();\n    }\n  };\n\n  return (\n    <div className={`bg-white shadow rounded-lg ${isFullscreen ? 'fixed inset-0 z-50 p-4' : 'p-6'}`}>\n      {/* Header with Controls */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">\n          Fluxograma do Projeto\n        </h2>\n\n        <div className=\"flex items-center gap-2\">\n          {/* Add Node Buttons */}\n          <div className=\"flex gap-1 mr-4\">\n            <button\n              onClick={() => addNewNode('input')}\n              className=\"px-3 py-1 bg-green-500 text-white text-xs rounded hover:bg-green-600\"\n              title=\"Adicionar Início\"\n            >\n              <Plus className=\"w-3 h-3\" />\n            </button>\n            <button\n              onClick={() => addNewNode('process')}\n              className=\"px-3 py-1 bg-blue-500 text-white text-xs rounded hover:bg-blue-600\"\n              title=\"Adicionar Processo\"\n            >\n              <Plus className=\"w-3 h-3\" />\n            </button>\n            <button\n              onClick={() => addNewNode('decision')}\n              className=\"px-3 py-1 bg-yellow-500 text-white text-xs rounded hover:bg-yellow-600\"\n              title=\"Adicionar Decisão\"\n            >\n              <Plus className=\"w-3 h-3\" />\n            </button>\n            <button\n              onClick={() => addNewNode('output')}\n              className=\"px-3 py-1 bg-purple-500 text-white text-xs rounded hover:bg-purple-600\"\n              title=\"Adicionar Fim\"\n            >\n              <Plus className=\"w-3 h-3\" />\n            </button>\n          </div>\n\n          {/* Control Buttons */}\n          <button\n            onClick={resetView}\n            className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\"\n            title=\"Resetar Visualização\"\n          >\n            <RotateCcw className=\"w-4 h-4\" />\n          </button>\n\n          <button\n            onClick={exportToJson}\n            className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\"\n            title=\"Exportar como JSON\"\n          >\n            <Download className=\"w-4 h-4\" />\n          </button>\n\n          <button\n            onClick={toggleFullscreen}\n            className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded\"\n            title={isFullscreen ? 'Sair da Tela Cheia' : 'Tela Cheia'}\n          >\n            {isFullscreen ? (\n              <Minimize2 className=\"w-4 h-4\" />\n            ) : (\n              <Maximize2 className=\"w-4 h-4\" />\n            )}\n          </button>\n        </div>\n      </div>\n\n      {flowchart.nodes.length === 0 ? (\n        <div className=\"text-center py-12 text-gray-500\">\n          <p>Nenhum fluxograma gerado ainda.</p>\n          <p className=\"text-sm mt-2\">\n            Faça upload de documentos e clique em \"Gerar Escopo e Tasks\" para criar o fluxograma.\n          </p>\n        </div>\n      ) : (\n        <div\n          ref={reactFlowWrapper}\n          className={`${isFullscreen ? 'h-[calc(100vh-120px)]' : 'h-96'} w-full border border-gray-200 rounded-lg`}\n        >\n          <ReactFlow\n            ref={reactFlowInstance}\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            nodeTypes={nodeTypes}\n            fitView\n            nodesDraggable={true}\n            nodesConnectable={true}\n            elementsSelectable={true}\n          >\n            <Background />\n            <Controls />\n            <MiniMap />\n          </ReactFlow>\n        </div>\n      )}\n\n      {flowchart.nodes.length > 0 && (\n        <div className=\"mt-4 text-sm text-gray-600\">\n          <strong>Nós:</strong> {nodes.length} |\n          <strong> Conexões:</strong> {edges.length}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FlowchartViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC5D,SACEC,SAAS,EAGTC,UAAU,EACVC,QAAQ,EACRC,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,MAAM,EACNC,QAAQ,EACRC,OAAO,QAIF,WAAW;AAClB,OAAO,0BAA0B;AACjC,SACEC,SAAS,EACTC,SAAS,EACTC,IAAI,EACJC,QAAQ,EAGRC,SAAS,QAEJ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYtB;AACA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAC1C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,QAAQD,IAAI;MACV,KAAK,OAAO;QACV,OAAO,8CAA8C;MACvD,KAAK,SAAS;QACZ,OAAO,2CAA2C;MACpD,KAAK,QAAQ;QACX,OAAO,iDAAiD;MAC1D,KAAK,UAAU;QACb,OAAO,iDAAiD;MAC1D;QACE,OAAO,2CAA2C;IACtD;EACF,CAAC;EAED,oBACEH,OAAA;IAAKK,SAAS,EAAE,2CAA2CD,YAAY,CAAC,CAAC,EAAG;IAAAE,QAAA,gBAC1EN,OAAA,CAACT,MAAM;MAACY,IAAI,EAAC,QAAQ;MAACI,QAAQ,EAAEf,QAAQ,CAACgB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDZ,OAAA;MAAKK,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAEJ,IAAI,CAACW;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvDZ,OAAA,CAACT,MAAM;MAACY,IAAI,EAAC,QAAQ;MAACI,QAAQ,EAAEf,QAAQ,CAACsB;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACG,EAAA,GAvBId,UAAU;AAyBhB,MAAMe,SAAS,GAAG;EAChBC,KAAK,EAAEhB,UAAU;EACjBiB,OAAO,EAAEjB,UAAU;EACnBkB,MAAM,EAAElB,UAAU;EAClBmB,QAAQ,EAAEnB;AACZ,CAAC;AAED,MAAMoB,eAA+C,GAAGA,CAAC;EACvDC,SAAS;EACTC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM6C,gBAAgB,GAAG3C,MAAM,CAAiB,IAAI,CAAC;EACrD,MAAM4C,iBAAiB,GAAG5C,MAAM,CAAM,IAAI,CAAC;;EAE3C;EACA,MAAM6C,YAAoB,GAAGP,SAAS,CAACQ,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;IACxDC,EAAE,EAAED,IAAI,CAACC,EAAE;IACX9B,IAAI,EAAE6B,IAAI,CAAC7B,IAAI;IACfI,QAAQ,EAAEyB,IAAI,CAACzB,QAAQ;IACvBL,IAAI,EAAE;MAAEW,KAAK,EAAEmB,IAAI,CAACnB;IAAM;EAC5B,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMqB,YAAoB,GAAGZ,SAAS,CAACa,KAAK,CAACJ,GAAG,CAACK,IAAI,KAAK;IACxDH,EAAE,EAAEG,IAAI,CAACH,EAAE;IACXI,MAAM,EAAED,IAAI,CAACC,MAAM;IACnBC,MAAM,EAAEF,IAAI,CAACE,MAAM;IACnBzB,KAAK,EAAEuB,IAAI,CAACvB,KAAK;IACjBV,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEH,MAAM,CAAC2B,KAAK,EAAES,QAAQ,EAAEC,aAAa,CAAC,GAAGnD,aAAa,CAACwC,YAAY,CAAC;EACpE,MAAM,CAACM,KAAK,EAAEM,QAAQ,EAAEC,aAAa,CAAC,GAAGpD,aAAa,CAAC4C,YAAY,CAAC;EAEpE,MAAMS,SAAS,GAAG5D,WAAW,CAC1B6D,MAAkB,IAAK;IACtB,IAAI,CAACA,MAAM,CAACP,MAAM,IAAI,CAACO,MAAM,CAACN,MAAM,EAAE;IAEtC,MAAMO,OAAsB,GAAG;MAC7BZ,EAAE,EAAE,QAAQa,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACxBV,MAAM,EAAEO,MAAM,CAACP,MAAM;MACrBC,MAAM,EAAEM,MAAM,CAACN,MAAM;MACrBnC,IAAI,EAAE;IACR,CAAC;IACDsC,QAAQ,CAAEO,GAAG,IAAKvD,OAAO,CAACoD,OAAO,EAAEG,GAAG,CAAC,CAAC;;IAExC;IACA,IAAIzB,iBAAiB,EAAE;MACrB,MAAM0B,gBAAgB,GAAG;QACvBnB,KAAK,EAAEA,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;UACxBC,EAAE,EAAED,IAAI,CAACC,EAAE;UACX9B,IAAI,EAAE6B,IAAI,CAAC7B,IAAmD;UAC9DU,KAAK,EAAEmB,IAAI,CAAC9B,IAAI,CAACW,KAAK;UACtBN,QAAQ,EAAEyB,IAAI,CAACzB;QACjB,CAAC,CAAC,CAAC;QACH4B,KAAK,EAAE,CAAC,GAAGA,KAAK,CAACJ,GAAG,CAACK,IAAI,KAAK;UAC5BH,EAAE,EAAEG,IAAI,CAACH,EAAE;UACXI,MAAM,EAAED,IAAI,CAACC,MAAM;UACnBC,MAAM,EAAEF,IAAI,CAACE,MAAM;UACnBzB,KAAK,EAAE,OAAOuB,IAAI,CAACvB,KAAK,KAAK,QAAQ,GAAGuB,IAAI,CAACvB,KAAK,GAAGqC;QACvD,CAAC,CAAC,CAAC,EAAE;UACHjB,EAAE,EAAEY,OAAO,CAACZ,EAAE;UACdI,MAAM,EAAEQ,OAAO,CAACR,MAAM;UACtBC,MAAM,EAAEO,OAAO,CAACP,MAAM;UACtBzB,KAAK,EAAEqC;QACT,CAAC;MACH,CAAC;MACD3B,iBAAiB,CAAC0B,gBAAgB,CAAC;IACrC;EACF,CAAC,EACD,CAACnB,KAAK,EAAEK,KAAK,EAAEM,QAAQ,EAAElB,iBAAiB,CAC5C,CAAC;EAED,MAAM4B,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzB,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAM2B,UAAU,GAAIjD,IAAiD,IAAK;IACxE,MAAMkD,OAAsB,GAAG;MAC7BpB,EAAE,EAAE,QAAQa,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACxB5C,IAAI;MACJI,QAAQ,EAAE;QACR+C,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;QAC5BC,CAAC,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;MAC3B,CAAC;MACDtD,IAAI,EAAE;QAAEW,KAAK,EAAE,QAAQV,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAGA,IAAI,KAAK,QAAQ,GAAG,KAAK,GAAGA,IAAI,KAAK,UAAU,GAAG,SAAS,GAAG,UAAU;MAAG;IAClI,CAAC;IAEDoC,QAAQ,CAAEmB,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEL,OAAO,CAAC,CAAC;;IAEpC;IACA,IAAI9B,iBAAiB,EAAE;MACrB,MAAM0B,gBAAgB,GAAG;QACvBnB,KAAK,EAAE,CAAC,GAAGA,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;UAC5BC,EAAE,EAAED,IAAI,CAACC,EAAE;UACX9B,IAAI,EAAE6B,IAAI,CAAC7B,IAAmD;UAC9DU,KAAK,EAAEmB,IAAI,CAAC9B,IAAI,CAACW,KAAK;UACtBN,QAAQ,EAAEyB,IAAI,CAACzB;QACjB,CAAC,CAAC,CAAC,EAAE;UACH0B,EAAE,EAAEoB,OAAO,CAACpB,EAAE;UACd9B,IAAI,EAAEkD,OAAO,CAAClD,IAAmD;UACjEU,KAAK,EAAEwC,OAAO,CAACnD,IAAI,CAACW,KAAK;UACzBN,QAAQ,EAAE8C,OAAO,CAAC9C;QACpB,CAAC,CAAC;QACF4B,KAAK,EAAEA,KAAK,CAACJ,GAAG,CAACK,IAAI,KAAK;UACxBH,EAAE,EAAEG,IAAI,CAACH,EAAE;UACXI,MAAM,EAAED,IAAI,CAACC,MAAM;UACnBC,MAAM,EAAEF,IAAI,CAACE,MAAM;UACnBzB,KAAK,EAAE,OAAOuB,IAAI,CAACvB,KAAK,KAAK,QAAQ,GAAGuB,IAAI,CAACvB,KAAK,GAAGqC;QACvD,CAAC,CAAC;MACJ,CAAC;MACD3B,iBAAiB,CAAC0B,gBAAgB,CAAC;IACrC;EACF,CAAC;EAED,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAG;MACpB9B,KAAK,EAAEA,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;QACxBC,EAAE,EAAED,IAAI,CAACC,EAAE;QACX9B,IAAI,EAAE6B,IAAI,CAAC7B,IAAmD;QAC9DU,KAAK,EAAEmB,IAAI,CAAC9B,IAAI,CAACW,KAAK;QACtBN,QAAQ,EAAEyB,IAAI,CAACzB;MACjB,CAAC,CAAC,CAAC;MACH4B,KAAK,EAAEA,KAAK,CAACJ,GAAG,CAACK,IAAI,KAAK;QACxBH,EAAE,EAAEG,IAAI,CAACH,EAAE;QACXI,MAAM,EAAED,IAAI,CAACC,MAAM;QACnBC,MAAM,EAAEF,IAAI,CAACE,MAAM;QACnBzB,KAAK,EAAE,OAAOuB,IAAI,CAACvB,KAAK,KAAK,QAAQ,GAAGuB,IAAI,CAACvB,KAAK,GAAGqC;MACvD,CAAC,CAAC;IACJ,CAAC;IAED,MAAMW,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACH,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,MAAMI,OAAO,GAAG,sCAAsC,GAAEC,kBAAkB,CAACJ,OAAO,CAAC;IAEnF,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEL,OAAO,CAAC;IAClCE,IAAI,CAACG,YAAY,CAAC,UAAU,EAAE,iBAAiB,CAAC;IAChDH,IAAI,CAACI,KAAK,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI3C,iBAAiB,CAAC4C,OAAO,EAAE;MAC7B5C,iBAAiB,CAAC4C,OAAO,CAACC,OAAO,CAAC,CAAC;IACrC;EACF,CAAC;EAED,oBACEzE,OAAA;IAAKK,SAAS,EAAE,8BAA8BoB,YAAY,GAAG,wBAAwB,GAAG,KAAK,EAAG;IAAAnB,QAAA,gBAE9FN,OAAA;MAAKK,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDN,OAAA;QAAIK,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAEpD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAELZ,OAAA;QAAKK,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBAEtCN,OAAA;UAAKK,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BN,OAAA;YACE0E,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,OAAO,CAAE;YACnC/C,SAAS,EAAC,sEAAsE;YAChFsE,KAAK,EAAC,qBAAkB;YAAArE,QAAA,eAExBN,OAAA,CAACJ,IAAI;cAACS,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACTZ,OAAA;YACE0E,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,SAAS,CAAE;YACrC/C,SAAS,EAAC,oEAAoE;YAC9EsE,KAAK,EAAC,oBAAoB;YAAArE,QAAA,eAE1BN,OAAA,CAACJ,IAAI;cAACS,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACTZ,OAAA;YACE0E,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,UAAU,CAAE;YACtC/C,SAAS,EAAC,wEAAwE;YAClFsE,KAAK,EAAC,sBAAmB;YAAArE,QAAA,eAEzBN,OAAA,CAACJ,IAAI;cAACS,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACTZ,OAAA;YACE0E,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAAC,QAAQ,CAAE;YACpC/C,SAAS,EAAC,wEAAwE;YAClFsE,KAAK,EAAC,eAAe;YAAArE,QAAA,eAErBN,OAAA,CAACJ,IAAI;cAACS,SAAS,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGNZ,OAAA;UACE0E,OAAO,EAAEH,SAAU;UACnBlE,SAAS,EAAC,iEAAiE;UAC3EsE,KAAK,EAAC,4BAAsB;UAAArE,QAAA,eAE5BN,OAAA,CAACF,SAAS;YAACO,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eAETZ,OAAA;UACE0E,OAAO,EAAEf,YAAa;UACtBtD,SAAS,EAAC,iEAAiE;UAC3EsE,KAAK,EAAC,oBAAoB;UAAArE,QAAA,eAE1BN,OAAA,CAACH,QAAQ;YAACQ,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eAETZ,OAAA;UACE0E,OAAO,EAAEvB,gBAAiB;UAC1B9C,SAAS,EAAC,iEAAiE;UAC3EsE,KAAK,EAAElD,YAAY,GAAG,oBAAoB,GAAG,YAAa;UAAAnB,QAAA,EAEzDmB,YAAY,gBACXzB,OAAA,CAACL,SAAS;YAACU,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEjCZ,OAAA,CAACN,SAAS;YAACW,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACjC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELU,SAAS,CAACQ,KAAK,CAAC8C,MAAM,KAAK,CAAC,gBAC3B5E,OAAA;MAAKK,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBAC9CN,OAAA;QAAAM,QAAA,EAAG;MAA+B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACtCZ,OAAA;QAAGK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAE5B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENZ,OAAA;MACE6E,GAAG,EAAElD,gBAAiB;MACtBtB,SAAS,EAAE,GAAGoB,YAAY,GAAG,uBAAuB,GAAG,MAAM,2CAA4C;MAAAnB,QAAA,eAEzGN,OAAA,CAACf,SAAS;QACR4F,GAAG,EAAEjD,iBAAkB;QACvBE,KAAK,EAAEA,KAAM;QACbK,KAAK,EAAEA,KAAM;QACbK,aAAa,EAAEA,aAAc;QAC7BE,aAAa,EAAEA,aAAc;QAC7BC,SAAS,EAAEA,SAAU;QACrB3B,SAAS,EAAEA,SAAU;QACrByD,OAAO;QACPK,cAAc,EAAE,IAAK;QACrBC,gBAAgB,EAAE,IAAK;QACvBC,kBAAkB,EAAE,IAAK;QAAA1E,QAAA,gBAEzBN,OAAA,CAACd,UAAU;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACdZ,OAAA,CAACb,QAAQ;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZZ,OAAA,CAACZ,OAAO;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACN,EAEAU,SAAS,CAACQ,KAAK,CAAC8C,MAAM,GAAG,CAAC,iBACzB5E,OAAA;MAAKK,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCN,OAAA;QAAAM,QAAA,EAAQ;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACkB,KAAK,CAAC8C,MAAM,EAAC,IACpC,eAAA5E,OAAA;QAAAM,QAAA,EAAQ;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACuB,KAAK,CAACyC,MAAM;IAAA;MAAAnE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACY,EAAA,CA5PIH,eAA+C;EAAA,QAyBVhC,aAAa,EACbC,aAAa;AAAA;AAAA2F,GAAA,GA1BlD5D,eAA+C;AA8PrD,eAAeA,eAAe;AAAC,IAAAN,EAAA,EAAAkE,GAAA;AAAAC,YAAA,CAAAnE,EAAA;AAAAmE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}