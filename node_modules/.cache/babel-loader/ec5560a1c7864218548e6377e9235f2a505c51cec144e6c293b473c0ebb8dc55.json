{"ast":null,"code":"import React from'react';import ProjectList from'../components/ProjectList';import ProjectPR from'../components/ProjectPR';import ProjectTasks from'../components/ProjectTasks';import ProjectFlowchart from'../components/ProjectFlowchart';import{jsx as _jsx}from\"react/jsx-runtime\";const ProjectsPage=_ref=>{let{user,onProjectSelected,onCreateNewProject,selectedProject,selectedProjectContent,onBack}=_ref;console.log('ProjectsPage: Component rendered',{userId:user===null||user===void 0?void 0:user.id,selectedProjectId:selectedProject===null||selectedProject===void 0?void 0:selectedProject.id,selectedProjectContentType:selectedProjectContent===null||selectedProjectContent===void 0?void 0:selectedProjectContent.contentType,hasOnBack:!!onBack});const handleBackToProjectSelection=React.useCallback(()=>{console.log('ProjectsPage: handleBackToProjectSelection called');// Limpa o selectedProjectContent para voltar para a seleção de conteúdo\nif(onBack){onBack();}},[onBack]);// If there's selected project content, show that specific content\nif(selectedProjectContent){switch(selectedProjectContent.contentType){case'pr':return/*#__PURE__*/_jsx(ProjectPR,{project:selectedProjectContent.project,onBack:handleBackToProjectSelection});case'tasks':return/*#__PURE__*/_jsx(ProjectTasks,{project:selectedProjectContent.project,onBack:handleBackToProjectSelection});case'flowchart':return/*#__PURE__*/_jsx(ProjectFlowchart,{project:selectedProjectContent.project,onBack:handleBackToProjectSelection});default:return/*#__PURE__*/_jsx(ProjectList,{user:user,onProjectSelected:onProjectSelected,onCreateNewProject:onCreateNewProject});}}// If there's a selected project but no content, show the content selection\nif(selectedProject){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-[calc(100vh-200px)]\",children:/*#__PURE__*/_jsx(ProjectList,{user:user,onProjectSelected:onProjectSelected,onCreateNewProject:onCreateNewProject,selectedProject:selectedProject,showContentSelection:true})});}// Default: show project list\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"min-h-[calc(100vh-200px)]\",children:/*#__PURE__*/_jsx(ProjectList,{user:user,onProjectSelected:onProjectSelected,onCreateNewProject:onCreateNewProject})});};export default ProjectsPage;","map":{"version":3,"names":["React","ProjectList","ProjectPR","ProjectTasks","ProjectFlowchart","jsx","_jsx","ProjectsPage","_ref","user","onProjectSelected","onCreateNewProject","selectedProject","selectedProjectContent","onBack","console","log","userId","id","selectedProjectId","selectedProjectContentType","contentType","hasOnBack","handleBackToProjectSelection","useCallback","project","className","children","showContentSelection"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/pages/ProjectsPage.tsx"],"sourcesContent":["import React from 'react';\nimport ProjectList from '../components/ProjectList';\nimport ProjectPR from '../components/ProjectPR';\nimport ProjectTasks from '../components/ProjectTasks';\nimport ProjectFlowchart from '../components/ProjectFlowchart';\nimport { Project } from '../lib/supabase';\n\ninterface ProjectsPageProps {\n  user: any;\n  onProjectSelected: (project: Project, contentType?: 'pr' | 'tasks' | 'flowchart') => void;\n  onCreateNewProject: () => void;\n  selectedProject?: Project | null;\n  selectedProjectContent?: {\n    project: Project;\n    contentType: 'pr' | 'tasks' | 'flowchart';\n  } | null;\n  onBack?: () => void;\n}\n\nconst ProjectsPage: React.FC<ProjectsPageProps> = ({\n  user,\n  onProjectSelected,\n  onCreateNewProject,\n  selectedProject,\n  selectedProjectContent,\n  onBack\n}) => {\n  console.log('ProjectsPage: Component rendered', {\n    userId: user?.id,\n    selectedProjectId: selectedProject?.id,\n    selectedProjectContentType: selectedProjectContent?.contentType,\n    hasOnBack: !!onBack\n  });\n\n\n  const handleBackToProjectSelection = React.useCallback(() => {\n    console.log('ProjectsPage: handleBackToProjectSelection called');\n    // Limpa o selectedProjectContent para voltar para a seleção de conteúdo\n    if (onBack) {\n      onBack();\n    }\n  }, [onBack]);\n\n  // If there's selected project content, show that specific content\n  if (selectedProjectContent) {\n    switch (selectedProjectContent.contentType) {\n      case 'pr':\n        return <ProjectPR project={selectedProjectContent.project} onBack={handleBackToProjectSelection} />;\n      case 'tasks':\n        return <ProjectTasks project={selectedProjectContent.project} onBack={handleBackToProjectSelection} />;\n      case 'flowchart':\n        return <ProjectFlowchart project={selectedProjectContent.project} onBack={handleBackToProjectSelection} />;\n      default:\n        return <ProjectList user={user} onProjectSelected={onProjectSelected} onCreateNewProject={onCreateNewProject} />;\n    }\n  }\n\n  // If there's a selected project but no content, show the content selection\n  if (selectedProject) {\n    return (\n      <div className=\"min-h-[calc(100vh-200px)]\">\n        <ProjectList\n          user={user}\n          onProjectSelected={onProjectSelected}\n          onCreateNewProject={onCreateNewProject}\n          selectedProject={selectedProject}\n          showContentSelection={true}\n        />\n      </div>\n    );\n  }\n\n  // Default: show project list\n  return (\n    <div className=\"min-h-[calc(100vh-200px)]\">\n      <ProjectList\n        user={user}\n        onProjectSelected={onProjectSelected}\n        onCreateNewProject={onCreateNewProject}\n      />\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAe9D,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAO5C,IAP6C,CACjDC,IAAI,CACJC,iBAAiB,CACjBC,kBAAkB,CAClBC,eAAe,CACfC,sBAAsB,CACtBC,MACF,CAAC,CAAAN,IAAA,CACCO,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAE,CAC9CC,MAAM,CAAER,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAES,EAAE,CAChBC,iBAAiB,CAAEP,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAEM,EAAE,CACtCE,0BAA0B,CAAEP,sBAAsB,SAAtBA,sBAAsB,iBAAtBA,sBAAsB,CAAEQ,WAAW,CAC/DC,SAAS,CAAE,CAAC,CAACR,MACf,CAAC,CAAC,CAGF,KAAM,CAAAS,4BAA4B,CAAGvB,KAAK,CAACwB,WAAW,CAAC,IAAM,CAC3DT,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC,CAChE;AACA,GAAIF,MAAM,CAAE,CACVA,MAAM,CAAC,CAAC,CACV,CACF,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAEZ;AACA,GAAID,sBAAsB,CAAE,CAC1B,OAAQA,sBAAsB,CAACQ,WAAW,EACxC,IAAK,IAAI,CACP,mBAAOf,IAAA,CAACJ,SAAS,EAACuB,OAAO,CAAEZ,sBAAsB,CAACY,OAAQ,CAACX,MAAM,CAAES,4BAA6B,CAAE,CAAC,CACrG,IAAK,OAAO,CACV,mBAAOjB,IAAA,CAACH,YAAY,EAACsB,OAAO,CAAEZ,sBAAsB,CAACY,OAAQ,CAACX,MAAM,CAAES,4BAA6B,CAAE,CAAC,CACxG,IAAK,WAAW,CACd,mBAAOjB,IAAA,CAACF,gBAAgB,EAACqB,OAAO,CAAEZ,sBAAsB,CAACY,OAAQ,CAACX,MAAM,CAAES,4BAA6B,CAAE,CAAC,CAC5G,QACE,mBAAOjB,IAAA,CAACL,WAAW,EAACQ,IAAI,CAAEA,IAAK,CAACC,iBAAiB,CAAEA,iBAAkB,CAACC,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,CACpH,CACF,CAEA;AACA,GAAIC,eAAe,CAAE,CACnB,mBACEN,IAAA,QAAKoB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,cACxCrB,IAAA,CAACL,WAAW,EACVQ,IAAI,CAAEA,IAAK,CACXC,iBAAiB,CAAEA,iBAAkB,CACrCC,kBAAkB,CAAEA,kBAAmB,CACvCC,eAAe,CAAEA,eAAgB,CACjCgB,oBAAoB,CAAE,IAAK,CAC5B,CAAC,CACC,CAAC,CAEV,CAEA;AACA,mBACEtB,IAAA,QAAKoB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,cACxCrB,IAAA,CAACL,WAAW,EACVQ,IAAI,CAAEA,IAAK,CACXC,iBAAiB,CAAEA,iBAAkB,CACrCC,kBAAkB,CAAEA,kBAAmB,CACxC,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}