{"ast":null,"code":"import _objectSpread from\"/Users/matheuspina/Desktop/briefy-new/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createClient}from'@supabase/supabase-js';const supabaseUrl=process.env.REACT_APP_SUPABASE_URL||'';const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY||'';if(!supabaseUrl||!supabaseAnonKey){console.error('‚ùå Supabase configuration missing!');console.error('üìù Please add the following to your .env file:');console.error('   REACT_APP_SUPABASE_URL=your_supabase_project_url');console.error('   REACT_APP_SUPABASE_ANON_KEY=your_supabase_anon_key');console.error('üîó Get these from your Supabase project settings');}export const supabase=createClient(supabaseUrl,supabaseAnonKey,{auth:{autoRefreshToken:true,persistSession:true,detectSessionInUrl:true}});// Tipos para autentica√ß√£o\n// Tipos para projetos\n// Tipos para materiais de apoio\n// Tipos para extra√ß√µes de v√≠deo\n// Tipos para an√°lises IA\n// Tipos para √©picos\n// Tipos para tasks\n// Tipos para prompts globais\n// Tipos para fluxogramas\n// Tipos para PRs\n// Fun√ß√µes auxiliares para autentica√ß√£o\nexport const auth={signUp:async(email,password,name)=>{const{data,error}=await supabase.auth.signUp({email,password,options:{data:{name:name||email.split('@')[0]}}});return{data,error};},signIn:async(email,password)=>{const{data,error}=await supabase.auth.signInWithPassword({email,password});return{data,error};},signOut:async()=>{const{error}=await supabase.auth.signOut();return{error};},getCurrentUser:async()=>{const{data:{user}}=await supabase.auth.getUser();return user;},onAuthStateChange:callback=>{return supabase.auth.onAuthStateChange(callback);}};// Fun√ß√µes para projetos\nexport const projects={create:async(name,description)=>{const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data,error}=await supabase.from('projects').insert({name,description,user_id:user.id}).select().single();return{data,error};},list:async()=>{const{data:{user}}=await supabase.auth.getUser();if(!user)throw new Error('User not authenticated');const{data,error}=await supabase.from('projects').select('*').eq('user_id',user.id).neq('is_system',true).order('created_at',{ascending:false});return{data,error};},get:async id=>{const{data,error}=await supabase.from('projects').select('*').eq('id',id).neq('is_system',true).single();return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('projects').update(updates).eq('id',id).neq('is_system',true).select().single();return{data,error};},delete:async id=>{const{error}=await supabase.from('projects').delete().eq('id',id).neq('is_system',true);return{error};}};// Fun√ß√µes para materiais de apoio\nexport const supportMaterials={create:async material=>{const{data,error}=await supabase.from('support_materials').insert(material).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('support_materials').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('support_materials').update(updates).eq('id',id).select().single();return{data,error};}};// Fun√ß√µes para extra√ß√µes de v√≠deo\nexport const videoExtractions={create:async extraction=>{const{data,error}=await supabase.from('video_extractions').insert(extraction).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('video_extractions').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};}};// Fun√ß√µes para an√°lises IA\nexport const aiAnalyses={create:async analysis=>{const{data,error}=await supabase.from('ai_analyses').insert(analysis).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('ai_analyses').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};}};// Fun√ß√µes para √©picos\nexport const epics={create:async epic=>{const{data,error}=await supabase.from('epics').insert(epic).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('epics').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('epics').update(updates).eq('id',id).select().single();return{data,error};}};// Fun√ß√µes para tasks\nexport const tasks={create:async task=>{const{data,error}=await supabase.from('tasks').insert(task).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('tasks').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('tasks').update(updates).eq('id',id).select().single();return{data,error};}};// Fun√ß√µes para fluxogramas\nexport const flowcharts={create:async flowchart=>{const{data,error}=await supabase.from('flowcharts').insert(flowchart).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('flowcharts').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('flowcharts').update(updates).eq('id',id).select().single();return{data,error};}};// Fun√ß√µes para PRs\nexport const pullRequests={create:async pr=>{const{data,error}=await supabase.from('pull_requests').insert(pr).select().single();return{data,error};},list:async projectId=>{const{data,error}=await supabase.from('pull_requests').select('*').eq('project_id',projectId).order('created_at',{ascending:false});return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('pull_requests').update(updates).eq('id',id).select().single();return{data,error};}};// Fun√ß√µes para prompts globais\nexport const globalPrompts={create:async data=>{const{data:result,error}=await supabase.from('global_prompts').insert(data).select().single();return{data:result,error};},list:async()=>{const{data,error}=await supabase.from('global_prompts').select('*').order('type');return{data,error};},update:async(id,updates)=>{const{data,error}=await supabase.from('global_prompts').update(_objectSpread(_objectSpread({},updates),{},{updated_at:new Date().toISOString()})).eq('id',id).select().single();return{data,error};},delete:async id=>{const{error}=await supabase.from('global_prompts').delete().eq('id',id);return{error};}};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","console","error","supabase","auth","autoRefreshToken","persistSession","detectSessionInUrl","signUp","email","password","name","data","options","split","signIn","signInWithPassword","signOut","getCurrentUser","user","getUser","onAuthStateChange","callback","projects","create","description","Error","from","insert","user_id","id","select","single","list","eq","neq","order","ascending","get","update","updates","delete","supportMaterials","material","projectId","videoExtractions","extraction","aiAnalyses","analysis","epics","epic","tasks","task","flowcharts","flowchart","pullRequests","pr","globalPrompts","result","_objectSpread","updated_at","Date","toISOString"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || '';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || '';\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error('‚ùå Supabase configuration missing!');\n  console.error('üìù Please add the following to your .env file:');\n  console.error('   REACT_APP_SUPABASE_URL=your_supabase_project_url');\n  console.error('   REACT_APP_SUPABASE_ANON_KEY=your_supabase_anon_key');\n  console.error('üîó Get these from your Supabase project settings');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\n\n// Tipos para autentica√ß√£o\nexport interface User {\n  id: string;\n  email: string;\n  name?: string;\n  avatar_url?: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para projetos\nexport interface Project {\n  id: string;\n  name: string;\n  description: string;\n  user_id: string;\n  created_at: string;\n  updated_at: string;\n  is_system?: boolean;\n}\n\n// Tipos para materiais de apoio\nexport interface SupportMaterialDB {\n  id: string;\n  name: string;\n  type: 'tasks' | 'flowchart' | 'pr';\n  content: string;\n  is_default: boolean;\n  project_id: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para extra√ß√µes de v√≠deo\nexport interface VideoExtraction {\n  id: string;\n  file_name: string;\n  extracted_text: string;\n  transcription: string;\n  duration?: number;\n  thumbnail_url?: string;\n  analysis_data: any;\n  project_id: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para an√°lises IA\nexport interface AIAnalysis {\n  id: string;\n  title: string;\n  content: string;\n  analysis_type: 'document' | 'video' | 'combined';\n  project_id: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para √©picos\nexport interface Epic {\n  id: string;\n  title: string;\n  description?: string;\n  priority: 'low' | 'medium' | 'high';\n  status: 'pending' | 'in_progress' | 'completed';\n  project_id: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para tasks\nexport interface Task {\n  id: string;\n  title: string;\n  description?: string;\n  story_points: number;\n  status: 'pending' | 'approved' | 'rejected';\n  category?: string;\n  epic_id?: string;\n  project_id: string;\n  criteria?: string[];\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para prompts globais\nexport interface GlobalPrompt {\n  id: string;\n  type: 'pr' | 'flowchart' | 'tasks';\n  title: string;\n  content: string;\n  is_default: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para fluxogramas\nexport interface Flowchart {\n  id: string;\n  title: string;\n  description: string;\n  nodes: any[];\n  edges: any[];\n  project_id: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Tipos para PRs\nexport interface PullRequest {\n  id: string;\n  title: string;\n  description: string;\n  content: string;\n  status: 'draft' | 'pending' | 'approved' | 'merged';\n  project_id: string;\n  created_at: string;\n  updated_at: string;\n}\n\n// Fun√ß√µes auxiliares para autentica√ß√£o\nexport const auth = {\n  signUp: async (email: string, password: string, name?: string) => {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          name: name || email.split('@')[0]\n        }\n      }\n    });\n    return { data, error };\n  },\n\n  signIn: async (email: string, password: string) => {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    return { data, error };\n  },\n\n  signOut: async () => {\n    const { error } = await supabase.auth.signOut();\n    return { error };\n  },\n\n  getCurrentUser: async () => {\n    const { data: { user } } = await supabase.auth.getUser();\n    return user;\n  },\n\n  onAuthStateChange: (callback: (event: string, session: any) => void) => {\n    return supabase.auth.onAuthStateChange(callback);\n  }\n};\n\n// Fun√ß√µes para projetos\nexport const projects = {\n  create: async (name: string, description: string) => {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) throw new Error('User not authenticated');\n\n    const { data, error } = await supabase\n      .from('projects')\n      .insert({\n        name,\n        description,\n        user_id: user.id\n      })\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async () => {\n    const { data: { user } } = await supabase.auth.getUser();\n    if (!user) throw new Error('User not authenticated');\n\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('user_id', user.id)\n      .neq('is_system', true)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  },\n\n  get: async (id: string) => {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('id', id)\n      .neq('is_system', true)\n      .single();\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<Project>) => {\n    const { data, error } = await supabase\n      .from('projects')\n      .update(updates)\n      .eq('id', id)\n      .neq('is_system', true)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  delete: async (id: string) => {\n    const { error } = await supabase\n      .from('projects')\n      .delete()\n      .eq('id', id)\n      .neq('is_system', true);\n\n    return { error };\n  }\n};\n\n// Fun√ß√µes para materiais de apoio\nexport const supportMaterials = {\n  create: async (material: Omit<SupportMaterialDB, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('support_materials')\n      .insert(material)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('support_materials')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<SupportMaterialDB>) => {\n    const { data, error } = await supabase\n      .from('support_materials')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para extra√ß√µes de v√≠deo\nexport const videoExtractions = {\n  create: async (extraction: Omit<VideoExtraction, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('video_extractions')\n      .insert(extraction)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('video_extractions')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para an√°lises IA\nexport const aiAnalyses = {\n  create: async (analysis: Omit<AIAnalysis, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('ai_analyses')\n      .insert(analysis)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('ai_analyses')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para √©picos\nexport const epics = {\n  create: async (epic: Omit<Epic, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('epics')\n      .insert(epic)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('epics')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<Epic>) => {\n    const { data, error } = await supabase\n      .from('epics')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para tasks\nexport const tasks = {\n  create: async (task: Omit<Task, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('tasks')\n      .insert(task)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('tasks')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<Task>) => {\n    const { data, error } = await supabase\n      .from('tasks')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para fluxogramas\nexport const flowcharts = {\n  create: async (flowchart: Omit<Flowchart, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('flowcharts')\n      .insert(flowchart)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('flowcharts')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<Flowchart>) => {\n    const { data, error } = await supabase\n      .from('flowcharts')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para PRs\nexport const pullRequests = {\n  create: async (pr: Omit<PullRequest, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data, error } = await supabase\n      .from('pull_requests')\n      .insert(pr)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  list: async (projectId: string) => {\n    const { data, error } = await supabase\n      .from('pull_requests')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<PullRequest>) => {\n    const { data, error } = await supabase\n      .from('pull_requests')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    return { data, error };\n  }\n};\n\n// Fun√ß√µes para prompts globais\nexport const globalPrompts = {\n  create: async (data: Omit<GlobalPrompt, 'id' | 'created_at' | 'updated_at'>) => {\n    const { data: result, error } = await supabase\n      .from('global_prompts')\n      .insert(data)\n      .select()\n      .single();\n\n    return { data: result, error };\n  },\n\n  list: async () => {\n    const { data, error } = await supabase\n      .from('global_prompts')\n      .select('*')\n      .order('type');\n\n    return { data, error };\n  },\n\n  update: async (id: string, updates: Partial<GlobalPrompt>) => {\n    const { data, error } = await supabase\n      .from('global_prompts')\n      .update({\n        ...updates,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', id)\n      .select()\n      .single();\n\n    return { data, error };\n  },\n\n  delete: async (id: string) => {\n    const { error } = await supabase\n      .from('global_prompts')\n      .delete()\n      .eq('id', id);\n\n    return { error };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}