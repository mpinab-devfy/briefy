{"ast":null,"code":"import _objectSpread from\"/Users/matheuspina/Desktop/briefy-new/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{globalPrompts}from'../lib/supabase';import{invalidatePromptsCache}from'../services/geminiService';import{Save,RotateCcw,FileText,GitBranch,CheckSquare}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultPrompts={pr:{title:'Prompt para Documento Técnico (PR)',content:\"Voc\\xEA \\xE9 um especialista em an\\xE1lise de requisitos e cria\\xE7\\xE3o de documentos t\\xE9cnicos.\\nCom base nos documentos fornecidos, gere um DOCUMENTO T\\xC9CNICO DETALHADO (PR) incluindo:\\n- Vis\\xE3o geral do projeto\\n- Objetivos e metas\\n- Arquitetura proposta\\n- Tecnologias e ferramentas\\n- Estimativa de esfor\\xE7o\\n- Riscos identificados\\n- Prazos estimados\\n- Or\\xE7amento aproximado\\n\\nRetorne apenas o texto do documento t\\xE9cnico, sem formata\\xE7\\xE3o JSON.\"},flowchart:{title:'Prompt para Fluxograma',content:\"Voc\\xEA \\xE9 um especialista em modelagem de processos e cria\\xE7\\xE3o de fluxogramas.\\nCom base nos documentos fornecidos, gere um FLUXOGRAMA em formato JSON v\\xE1lido.\\nO fluxograma deve representar o fluxo completo do projeto/processo.\\n\\nIMPORTANTE: Retorne APENAS um JSON v\\xE1lido com esta estrutura:\\n{\\n  \\\"nodes\\\": [\\n    {\\n      \\\"id\\\": \\\"string\\\",\\n      \\\"type\\\": \\\"input|process|output|decision\\\",\\n      \\\"label\\\": \\\"string\\\",\\n      \\\"position\\\": {\\\"x\\\": number, \\\"y\\\": number}\\n    }\\n  ],\\n  \\\"edges\\\": [\\n    {\\n      \\\"id\\\": \\\"string\\\",\\n      \\\"source\\\": \\\"string\\\",\\n      \\\"target\\\": \\\"string\\\",\\n      \\\"label\\\": \\\"string (opcional)\\\"\\n    }\\n  ]\\n}\"},tasks:{title:'Prompt para Tasks e Épicos',content:\"Voc\\xEA \\xE9 um especialista em gerenciamento de projetos e cria\\xE7\\xE3o de tarefas.\\nCom base nos documentos fornecidos, gere um conjunto completo de TASKS organizadas por \\xC9PICOS.\\n\\nIMPORTANTE: Retorne APENAS um JSON v\\xE1lido com esta estrutura:\\n{\\n  \\\"epics\\\": [\\n    {\\n      \\\"title\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"string\\\",\\n      \\\"priority\\\": \\\"low|medium|high\\\"\\n    }\\n  ],\\n  \\\"tasks\\\": [\\n    {\\n      \\\"title\\\": \\\"string\\\",\\n      \\\"description\\\": \\\"string\\\",\\n      \\\"story_points\\\": number (1, 2, 3, 5, 8, 13),\\n      \\\"category\\\": \\\"frontend|backend|design|testing|devops|database|security|documentation\\\",\\n      \\\"epic_index\\\": number (\\xEDndice do \\xE9pico relacionado, come\\xE7ando em 0),\\n      \\\"acceptance_criteria\\\": [\\\"string1\\\", \\\"string2\\\"],\\n      \\\"priority\\\": \\\"low|medium|high\\\"\\n    }\\n  ]\\n}\"}};export const GlobalPromptsConfig=()=>{const[prompts,setPrompts]=useState([]);const[loading,setLoading]=useState(true);const[saving,setSaving]=useState(null);const[error,setError]=useState(null);// Carregar prompts do banco de dados\nuseEffect(()=>{loadPrompts();},[]);const loadPrompts=async()=>{try{setLoading(true);setError(null);// Carregar prompts usando as funções do supabase\nconst{data,error}=await globalPrompts.list();if(error&&error.message.includes('relation \"global_prompts\" does not exist')){// Usar prompts padrão se a tabela não existir\nconst defaultPromptsArray=Object.entries(defaultPrompts).map((_ref,index)=>{let[type,prompt]=_ref;return{id:\"default-\".concat(type),type:type,title:prompt.title,content:prompt.content,is_default:true,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};});setPrompts(defaultPromptsArray);}else if(error){setError('Erro ao carregar prompts: '+error.message);}else{setPrompts(data||[]);}}catch(err){setError('Erro ao carregar prompts: '+err.message);}finally{setLoading(false);}};const handleSavePrompt=async(type,content)=>{try{setSaving(type);setError(null);const existingPrompt=prompts.find(p=>p.type===type&&!p.is_default);if(existingPrompt){// Atualizar prompt existente\nconsole.log('Atualizando prompt existente:',existingPrompt.id);const{error}=await globalPrompts.update(existingPrompt.id,{content});if(error)throw error;}else{// Criar novo prompt\nconsole.log('Criando novo prompt para tipo:',type);const{error}=await globalPrompts.create({type,title:defaultPrompts[type].title,content,is_default:false});if(error)throw error;}// Invalidar cache e recarregar prompts\ninvalidatePromptsCache();await loadPrompts();console.log('Prompt salvo com sucesso para tipo:',type);}catch(err){console.error('Erro ao salvar prompt:',err);setError('Erro ao salvar prompt: '+err.message);}finally{setSaving(null);}};const handleResetPrompt=async type=>{try{setError(null);const defaultContent=defaultPrompts[type].content;await handleSavePrompt(type,defaultContent);}catch(err){setError('Erro ao resetar prompt: '+err.message);}};const getPromptIcon=type=>{switch(type){case'pr':return/*#__PURE__*/_jsx(FileText,{className:\"w-5 h-5\"});case'flowchart':return/*#__PURE__*/_jsx(GitBranch,{className:\"w-5 h-5\"});case'tasks':return/*#__PURE__*/_jsx(CheckSquare,{className:\"w-5 h-5\"});default:return/*#__PURE__*/_jsx(FileText,{className:\"w-5 h-5\"});}};const getPromptColor=type=>{switch(type){case'pr':return'text-blue-600 bg-blue-50 border-blue-200';case'flowchart':return'text-purple-600 bg-purple-50 border-purple-200';case'tasks':return'text-green-600 bg-green-50 border-green-200';default:return'text-gray-600 bg-gray-50 border-gray-200';}};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-600\",children:\"Carregando prompts...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 mb-2\",children:\"Prompts Globais\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Configure os prompts que ser\\xE3o usados para gerar documentos t\\xE9cnicos, fluxogramas e tasks. Cada prompt ser\\xE1 combinado com o conte\\xFAdo dos documentos enviados.\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-50 border border-red-200 rounded-md p-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-red-800\",children:error})}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:Object.entries(defaultPrompts).map(_ref2=>{let[type,defaultPrompt]=_ref2;const currentPrompt=prompts.find(p=>p.type===type);const isModified=currentPrompt&&currentPrompt.content!==defaultPrompt.content;return/*#__PURE__*/_jsxs(\"div\",{className:\"border rounded-lg p-6 \".concat(getPromptColor(type)),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[getPromptIcon(type),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium text-gray-900\",children:defaultPrompt.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600\",children:[\"Tipo: \",type.toUpperCase(),isModified&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-orange-600\",children:\"(Modificado)\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleResetPrompt(type),className:\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800 border border-gray-300 rounded-md hover:bg-gray-50\",disabled:saving===type,children:[/*#__PURE__*/_jsx(RotateCcw,{className:\"w-4 h-4 inline mr-1\"}),\"Resetar\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{// Buscar o conteúdo atual do textarea\nconst textarea=document.querySelector(\"textarea[data-prompt-type=\\\"\".concat(type,\"\\\"]\"));const content=textarea?textarea.value:(currentPrompt===null||currentPrompt===void 0?void 0:currentPrompt.content)||defaultPrompt.content;handleSavePrompt(type,content);},className:\"px-3 py-1 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\",disabled:saving===type,children:saving===type?/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Save,{className:\"w-4 h-4 inline mr-1\"}),\"Salvar\"]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Prompt\"}),/*#__PURE__*/_jsx(\"textarea\",{\"data-prompt-type\":type,value:(currentPrompt===null||currentPrompt===void 0?void 0:currentPrompt.content)||defaultPrompt.content,onChange:e=>{const updatedPrompts=prompts.map(p=>p.type===type?_objectSpread(_objectSpread({},p),{},{content:e.target.value}):p);// Não criar prompt temporário - deixar a lógica de salvar lidar com isso\nsetPrompts(updatedPrompts);},className:\"w-full h-64 p-4 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 font-mono text-sm\",placeholder:\"Digite o prompt personalizado...\"})]})]},type);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 border border-blue-200 rounded-md p-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-900 mb-2\",children:\"\\uD83D\\uDCA1 Dicas para Prompts Eficazes\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-blue-800 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Seja espec\\xEDfico sobre o formato de sa\\xEDda esperado\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Inclua exemplos quando necess\\xE1rio\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Use placeholders para conte\\xFAdo din\\xE2mico\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Defina claramente o escopo e limita\\xE7\\xF5es\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u2022 Teste os prompts com diferentes tipos de documentos\"})]})]})]});};","map":{"version":3,"names":["React","useState","useEffect","globalPrompts","invalidatePromptsCache","Save","RotateCcw","FileText","GitBranch","CheckSquare","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultPrompts","pr","title","content","flowchart","tasks","GlobalPromptsConfig","prompts","setPrompts","loading","setLoading","saving","setSaving","error","setError","loadPrompts","data","list","message","includes","defaultPromptsArray","Object","entries","map","_ref","index","type","prompt","id","concat","is_default","created_at","Date","toISOString","updated_at","err","handleSavePrompt","existingPrompt","find","p","console","log","update","create","handleResetPrompt","defaultContent","getPromptIcon","className","getPromptColor","children","_ref2","defaultPrompt","currentPrompt","isModified","toUpperCase","onClick","disabled","textarea","document","querySelector","value","onChange","e","updatedPrompts","_objectSpread","target","placeholder"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/components/GlobalPromptsConfig.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase, globalPrompts, GlobalPrompt } from '../lib/supabase';\nimport { invalidatePromptsCache } from '../services/geminiService';\nimport { Save, RotateCcw, FileText, GitBranch, CheckSquare } from 'lucide-react';\n\n\n\nconst defaultPrompts = {\n  pr: {\n    title: 'Prompt para Documento Técnico (PR)',\n    content: `Você é um especialista em análise de requisitos e criação de documentos técnicos.\nCom base nos documentos fornecidos, gere um DOCUMENTO TÉCNICO DETALHADO (PR) incluindo:\n- Visão geral do projeto\n- Objetivos e metas\n- Arquitetura proposta\n- Tecnologias e ferramentas\n- Estimativa de esforço\n- Riscos identificados\n- Prazos estimados\n- Orçamento aproximado\n\nRetorne apenas o texto do documento técnico, sem formatação JSON.`\n  },\n  flowchart: {\n    title: 'Prompt para Fluxograma',\n    content: `Você é um especialista em modelagem de processos e criação de fluxogramas.\nCom base nos documentos fornecidos, gere um FLUXOGRAMA em formato JSON válido.\nO fluxograma deve representar o fluxo completo do projeto/processo.\n\nIMPORTANTE: Retorne APENAS um JSON válido com esta estrutura:\n{\n  \"nodes\": [\n    {\n      \"id\": \"string\",\n      \"type\": \"input|process|output|decision\",\n      \"label\": \"string\",\n      \"position\": {\"x\": number, \"y\": number}\n    }\n  ],\n  \"edges\": [\n    {\n      \"id\": \"string\",\n      \"source\": \"string\",\n      \"target\": \"string\",\n      \"label\": \"string (opcional)\"\n    }\n  ]\n}`\n  },\n  tasks: {\n    title: 'Prompt para Tasks e Épicos',\n    content: `Você é um especialista em gerenciamento de projetos e criação de tarefas.\nCom base nos documentos fornecidos, gere um conjunto completo de TASKS organizadas por ÉPICOS.\n\nIMPORTANTE: Retorne APENAS um JSON válido com esta estrutura:\n{\n  \"epics\": [\n    {\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"priority\": \"low|medium|high\"\n    }\n  ],\n  \"tasks\": [\n    {\n      \"title\": \"string\",\n      \"description\": \"string\",\n      \"story_points\": number (1, 2, 3, 5, 8, 13),\n      \"category\": \"frontend|backend|design|testing|devops|database|security|documentation\",\n      \"epic_index\": number (índice do épico relacionado, começando em 0),\n      \"acceptance_criteria\": [\"string1\", \"string2\"],\n      \"priority\": \"low|medium|high\"\n    }\n  ]\n}`\n  }\n};\n\nexport const GlobalPromptsConfig: React.FC = () => {\n  const [prompts, setPrompts] = useState<GlobalPrompt[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Carregar prompts do banco de dados\n  useEffect(() => {\n    loadPrompts();\n  }, []);\n\n  const loadPrompts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Carregar prompts usando as funções do supabase\n      const { data, error } = await globalPrompts.list();\n\n      if (error && error.message.includes('relation \"global_prompts\" does not exist')) {\n        // Usar prompts padrão se a tabela não existir\n        const defaultPromptsArray = Object.entries(defaultPrompts).map(([type, prompt], index) => ({\n          id: `default-${type}`,\n          type: type as 'pr' | 'flowchart' | 'tasks',\n          title: prompt.title,\n          content: prompt.content,\n          is_default: true,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        }));\n        setPrompts(defaultPromptsArray);\n      } else if (error) {\n        setError('Erro ao carregar prompts: ' + error.message);\n      } else {\n        setPrompts(data || []);\n      }\n    } catch (err: any) {\n      setError('Erro ao carregar prompts: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSavePrompt = async (type: 'pr' | 'flowchart' | 'tasks', content: string) => {\n    try {\n      setSaving(type);\n      setError(null);\n\n      const existingPrompt = prompts.find(p => p.type === type && !p.is_default);\n\n      if (existingPrompt) {\n        // Atualizar prompt existente\n        console.log('Atualizando prompt existente:', existingPrompt.id);\n        const { error } = await globalPrompts.update(existingPrompt.id, { content });\n        if (error) throw error;\n      } else {\n        // Criar novo prompt\n        console.log('Criando novo prompt para tipo:', type);\n        const { error } = await globalPrompts.create({\n          type,\n          title: defaultPrompts[type].title,\n          content,\n          is_default: false\n        });\n        if (error) throw error;\n      }\n\n      // Invalidar cache e recarregar prompts\n      invalidatePromptsCache();\n      await loadPrompts();\n\n      console.log('Prompt salvo com sucesso para tipo:', type);\n    } catch (err: any) {\n      console.error('Erro ao salvar prompt:', err);\n      setError('Erro ao salvar prompt: ' + err.message);\n    } finally {\n      setSaving(null);\n    }\n  };\n\n  const handleResetPrompt = async (type: 'pr' | 'flowchart' | 'tasks') => {\n    try {\n      setError(null);\n      const defaultContent = defaultPrompts[type].content;\n      await handleSavePrompt(type, defaultContent);\n    } catch (err: any) {\n      setError('Erro ao resetar prompt: ' + err.message);\n    }\n  };\n\n  const getPromptIcon = (type: string) => {\n    switch (type) {\n      case 'pr':\n        return <FileText className=\"w-5 h-5\" />;\n      case 'flowchart':\n        return <GitBranch className=\"w-5 h-5\" />;\n      case 'tasks':\n        return <CheckSquare className=\"w-5 h-5\" />;\n      default:\n        return <FileText className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getPromptColor = (type: string) => {\n    switch (type) {\n      case 'pr':\n        return 'text-blue-600 bg-blue-50 border-blue-200';\n      case 'flowchart':\n        return 'text-purple-600 bg-purple-50 border-purple-200';\n      case 'tasks':\n        return 'text-green-600 bg-green-50 border-green-200';\n      default:\n        return 'text-gray-600 bg-gray-50 border-gray-200';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-3 text-gray-600\">Carregando prompts...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Prompts Globais</h2>\n        <p className=\"text-gray-600\">\n          Configure os prompts que serão usados para gerar documentos técnicos, fluxogramas e tasks.\n          Cada prompt será combinado com o conteúdo dos documentos enviados.\n        </p>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <p className=\"text-red-800\">{error}</p>\n        </div>\n      )}\n\n      <div className=\"space-y-6\">\n        {Object.entries(defaultPrompts).map(([type, defaultPrompt]) => {\n          const currentPrompt = prompts.find(p => p.type === type);\n          const isModified = currentPrompt && currentPrompt.content !== defaultPrompt.content;\n\n          return (\n            <div key={type} className={`border rounded-lg p-6 ${getPromptColor(type)}`}>\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-3\">\n                  {getPromptIcon(type)}\n                  <div>\n                    <h3 className=\"font-medium text-gray-900\">{defaultPrompt.title}</h3>\n                    <p className=\"text-sm text-gray-600\">\n                      Tipo: {type.toUpperCase()}\n                      {isModified && <span className=\"ml-2 text-orange-600\">(Modificado)</span>}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => handleResetPrompt(type as any)}\n                    className=\"px-3 py-1 text-sm text-gray-600 hover:text-gray-800 border border-gray-300 rounded-md hover:bg-gray-50\"\n                    disabled={saving === type}\n                  >\n                    <RotateCcw className=\"w-4 h-4 inline mr-1\" />\n                    Resetar\n                  </button>\n                  <button\n                    onClick={() => {\n                      // Buscar o conteúdo atual do textarea\n                      const textarea = document.querySelector(`textarea[data-prompt-type=\"${type}\"]`) as HTMLTextAreaElement;\n                      const content = textarea ? textarea.value : (currentPrompt?.content || defaultPrompt.content);\n                      handleSavePrompt(type as any, content);\n                    }}\n                    className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                    disabled={saving === type}\n                  >\n                    {saving === type ? (\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                    ) : (\n                      <>\n                        <Save className=\"w-4 h-4 inline mr-1\" />\n                        Salvar\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Prompt\n                </label>\n                <textarea\n                  data-prompt-type={type}\n                  value={currentPrompt?.content || defaultPrompt.content}\n                  onChange={(e) => {\n                    const updatedPrompts = prompts.map(p =>\n                      p.type === type ? { ...p, content: e.target.value } : p\n                    );\n                    // Não criar prompt temporário - deixar a lógica de salvar lidar com isso\n                    setPrompts(updatedPrompts);\n                  }}\n                  className=\"w-full h-64 p-4 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500 font-mono text-sm\"\n                  placeholder=\"Digite o prompt personalizado...\"\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n        <h4 className=\"font-medium text-blue-900 mb-2\">💡 Dicas para Prompts Eficazes</h4>\n        <ul className=\"text-sm text-blue-800 space-y-1\">\n          <li>• Seja específico sobre o formato de saída esperado</li>\n          <li>• Inclua exemplos quando necessário</li>\n          <li>• Use placeholders para conteúdo dinâmico</li>\n          <li>• Defina claramente o escopo e limitações</li>\n          <li>• Teste os prompts com diferentes tipos de documentos</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}