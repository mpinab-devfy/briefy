{"ast":null,"code":"var _jsxFileName = \"/Users/matheuspina/Desktop/briefy-new/src/pages/ProjectsPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ProjectList from '../components/ProjectList';\nimport ProjectPR from '../components/ProjectPR';\nimport ProjectTasks from '../components/ProjectTasks';\nimport ProjectFlowchart from '../components/ProjectFlowchart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectsPage = ({\n  user,\n  onProjectSelected,\n  onCreateNewProject,\n  selectedProject,\n  selectedProjectContent,\n  onBack\n}) => {\n  _s();\n  console.log('ProjectsPage: Component rendered', {\n    userId: user === null || user === void 0 ? void 0 : user.id,\n    selectedProjectId: selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id,\n    selectedProjectContentType: selectedProjectContent === null || selectedProjectContent === void 0 ? void 0 : selectedProjectContent.contentType,\n    hasOnBack: !!onBack\n  });\n  const handleBackToProjectSelection = React.useCallback(() => {\n    console.log('ProjectsPage: handleBackToProjectSelection called');\n    // Limpa o selectedProjectContent para voltar para a seleção de conteúdo\n    if (onBack) {\n      onBack();\n    }\n  }, [onBack]);\n\n  // If there's selected project content, show that specific content\n  if (selectedProjectContent) {\n    switch (selectedProjectContent.contentType) {\n      case 'pr':\n        return /*#__PURE__*/_jsxDEV(ProjectPR, {\n          project: selectedProjectContent.project,\n          onBack: handleBackToProjectSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n      case 'tasks':\n        return /*#__PURE__*/_jsxDEV(ProjectTasks, {\n          project: selectedProjectContent.project,\n          onBack: handleBackToProjectSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n      case 'flowchart':\n        return /*#__PURE__*/_jsxDEV(ProjectFlowchart, {\n          project: selectedProjectContent.project,\n          onBack: handleBackToProjectSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(ProjectList, {\n          user: user,\n          onProjectSelected: onProjectSelected,\n          onCreateNewProject: onCreateNewProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  // If there's a selected project but no content, show the content selection\n  if (selectedProject) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-[calc(100vh-200px)]\",\n      children: /*#__PURE__*/_jsxDEV(ProjectList, {\n        user: user,\n        onProjectSelected: onProjectSelected,\n        onCreateNewProject: onCreateNewProject,\n        selectedProject: selectedProject,\n        showContentSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Default: show project list\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-[calc(100vh-200px)]\",\n    children: /*#__PURE__*/_jsxDEV(ProjectList, {\n      user: user,\n      onProjectSelected: onProjectSelected,\n      onCreateNewProject: onCreateNewProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectsPage, \"rRtXw54YbbTqfSQzkrfRx1qkMfw=\");\n_c = ProjectsPage;\nexport default ProjectsPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","ProjectList","ProjectPR","ProjectTasks","ProjectFlowchart","jsxDEV","_jsxDEV","ProjectsPage","user","onProjectSelected","onCreateNewProject","selectedProject","selectedProjectContent","onBack","_s","console","log","userId","id","selectedProjectId","selectedProjectContentType","contentType","hasOnBack","handleBackToProjectSelection","useCallback","project","fileName","_jsxFileName","lineNumber","columnNumber","className","children","showContentSelection","_c","$RefreshReg$"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/pages/ProjectsPage.tsx"],"sourcesContent":["import React from 'react';\nimport ProjectList from '../components/ProjectList';\nimport ProjectPR from '../components/ProjectPR';\nimport ProjectTasks from '../components/ProjectTasks';\nimport ProjectFlowchart from '../components/ProjectFlowchart';\nimport { Project } from '../lib/supabase';\n\ninterface ProjectsPageProps {\n  user: any;\n  onProjectSelected: (project: Project, contentType?: 'pr' | 'tasks' | 'flowchart') => void;\n  onCreateNewProject: () => void;\n  selectedProject?: Project | null;\n  selectedProjectContent?: {\n    project: Project;\n    contentType: 'pr' | 'tasks' | 'flowchart';\n  } | null;\n  onBack?: () => void;\n}\n\nconst ProjectsPage: React.FC<ProjectsPageProps> = ({\n  user,\n  onProjectSelected,\n  onCreateNewProject,\n  selectedProject,\n  selectedProjectContent,\n  onBack\n}) => {\n  console.log('ProjectsPage: Component rendered', {\n    userId: user?.id,\n    selectedProjectId: selectedProject?.id,\n    selectedProjectContentType: selectedProjectContent?.contentType,\n    hasOnBack: !!onBack\n  });\n\n\n  const handleBackToProjectSelection = React.useCallback(() => {\n    console.log('ProjectsPage: handleBackToProjectSelection called');\n    // Limpa o selectedProjectContent para voltar para a seleção de conteúdo\n    if (onBack) {\n      onBack();\n    }\n  }, [onBack]);\n\n  // If there's selected project content, show that specific content\n  if (selectedProjectContent) {\n    switch (selectedProjectContent.contentType) {\n      case 'pr':\n        return <ProjectPR project={selectedProjectContent.project} onBack={handleBackToProjectSelection} />;\n      case 'tasks':\n        return <ProjectTasks project={selectedProjectContent.project} onBack={handleBackToProjectSelection} />;\n      case 'flowchart':\n        return <ProjectFlowchart project={selectedProjectContent.project} onBack={handleBackToProjectSelection} />;\n      default:\n        return <ProjectList user={user} onProjectSelected={onProjectSelected} onCreateNewProject={onCreateNewProject} />;\n    }\n  }\n\n  // If there's a selected project but no content, show the content selection\n  if (selectedProject) {\n    return (\n      <div className=\"min-h-[calc(100vh-200px)]\">\n        <ProjectList\n          user={user}\n          onProjectSelected={onProjectSelected}\n          onCreateNewProject={onCreateNewProject}\n          selectedProject={selectedProject}\n          showContentSelection={true}\n        />\n      </div>\n    );\n  }\n\n  // Default: show project list\n  return (\n    <div className=\"min-h-[calc(100vh-200px)]\">\n      <ProjectList\n        user={user}\n        onProjectSelected={onProjectSelected}\n        onCreateNewProject={onCreateNewProject}\n      />\n    </div>\n  );\n};\n\nexport default ProjectsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}