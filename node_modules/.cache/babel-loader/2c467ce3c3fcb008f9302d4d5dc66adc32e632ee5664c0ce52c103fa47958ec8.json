{"ast":null,"code":"import _objectSpread from\"/Users/matheuspina/Desktop/briefy-new/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * ARQUITETURA DE PROMPTS - IMPORTANTE\n *\n * 1. DEFAULT_PROMPTS (hardcoded): Cont√©m instru√ß√µes t√©cnicas sobre:\n *    - Como a IA deve se comportar (papel/fun√ß√£o)\n *    - Formato de resposta esperado (JSON, texto, etc.)\n *    - Estrutura de dados obrigat√≥ria\n *    - Regras de parsing e valida√ß√£o\n *\n * 2. PROMPTS GLOBAIS (banco de dados): Devem conter APENAS:\n *    - Contexto espec√≠fico do dom√≠nio/neg√≥cio\n *    - Informa√ß√µes contextuais adicionais\n *    - Prefer√™ncias espec√≠ficas do cliente/usu√°rio\n *    - NUNCA instru√ß√µes t√©cnicas sobre formato de resposta\n *\n *    EXEMPLOS de prompts globais (APENAS contexto):\n *    - \"Este √© um sistema de e-commerce para vendas online\"\n *    - \"Cliente trabalha com gest√£o de cl√≠nicas m√©dicas\"\n *    - \"Priorizar seguran√ßa e conformidade com LGPD\"\n *    - \"Sistema deve ser compat√≠vel com dispositivos m√≥veis\"\n *\n * 3. CONTE√öDO DIN√ÇMICO:\n *    - Conte√∫do dos documentos do projeto\n *    - Informa√ß√µes adicionais fornecidas pelo usu√°rio\n *\n * Combina√ß√£o final: Instru√ß√µes T√©cnicas + Contexto Espec√≠fico + Conte√∫do do Projeto\n */import{GoogleGenerativeAI}from'@google/generative-ai';import{supabase}from'../lib/supabase';import{supportMaterials}from'../lib/supabase';// Configura√ß√£o da API key do Gemini\nconst API_KEY=process.env.REACT_APP_GEMINI_API_KEY||'';if(!API_KEY){console.error('‚ùå REACT_APP_GEMINI_API_KEY n√£o configurada no arquivo .env');console.error('üìù Para configurar: crie um arquivo .env na raiz do projeto com:');console.error('   REACT_APP_GEMINI_API_KEY=sua_api_key_aqui');console.error('üîë Obtenha sua API key em: https://makersuite.google.com/app/apikey');}let genAI;try{genAI=new GoogleGenerativeAI(API_KEY);}catch(error){console.error('‚ùå Erro ao inicializar GoogleGenerativeAI:',error);}// Prompts padr√£o (fallback)\nconst DEFAULT_PROMPTS={pr:\"Voc\\xEA \\xE9 um especialista em an\\xE1lise de requisitos e cria\\xE7\\xE3o de documentos t\\xE9cnicos.\\nCom base nos documentos fornecidos, gere um DOCUMENTO T\\xC9CNICO DETALHADO (PR) incluindo:\\n- Vis\\xE3o geral do projeto\\n- Objetivos e metas\\n- Arquitetura proposta\\n- Tecnologias e ferramentas\\n- Estimativa de esfor\\xE7o\\n- Riscos identificados\\n- Prazos estimados\\n- Or\\xE7amento aproximado\\n\\nRetorne apenas o texto do documento t\\xE9cnico, sem formata\\xE7\\xE3o JSON.\",flowchart:\"Voc\\xEA \\xE9 um especialista em modelagem de processos e cria\\xE7\\xE3o de fluxogramas t\\xE9cnicos.\\nCom base nos documentos fornecidos, gere um FLUXOGRAMA em formato JSON v\\xE1lido que represente o fluxo completo do projeto/processo.\\n\\n**INSTRU\\xC7\\xD5ES IMPORTANTES:**\\n\\n1. **AN\\xC1LISE DO PROCESSO**: Identifique as etapas principais do processo, pontos de decis\\xE3o, entradas e sa\\xEDdas.\\n\\n2. **CRIA\\xC7\\xC3O DE N\\xD3S**:\\n   - **input**: Pontos de entrada, in\\xEDcio do processo\\n   - **process**: Atividades, tarefas, processamento de dados\\n   - **output**: Resultados, fim do processo\\n   - **decision**: Pontos de decis\\xE3o com ramifica\\xE7\\xF5es (sim/n\\xE3o)\\n\\n3. **POSICIONAMENTO**: Distribua os n\\xF3s de forma l\\xF3gica no diagrama:\\n   - Fluxo de cima para baixo ou esquerda para direita\\n   - Agrupe n\\xF3s relacionados\\n   - Mantenha dist\\xE2ncia adequada entre n\\xF3s\\n\\n4. **CONEX\\xD5ES**: Cada edge deve conectar exatamente 2 n\\xF3s existentes.\\n\\n**ESTRUTURA OBRIGAT\\xD3RIA**: Retorne APENAS um JSON v\\xE1lido (sem texto adicional):\\n\\n{\\n  \\\"nodes\\\": [\\n    {\\n      \\\"id\\\": \\\"string_unico\\\",\\n      \\\"type\\\": \\\"input|process|output|decision\\\",\\n      \\\"label\\\": \\\"Descri\\xE7\\xE3o clara e concisa do n\\xF3\\\",\\n      \\\"position\\\": {\\\"x\\\": number, \\\"y\\\": number}\\n    }\\n  ],\\n  \\\"edges\\\": [\\n    {\\n      \\\"id\\\": \\\"edge_string_unico\\\",\\n      \\\"source\\\": \\\"id_do_no_origem\\\",\\n      \\\"target\\\": \\\"id_do_no_destino\\\",\\n      \\\"label\\\": \\\"r\\xF3tulo_opcional_da_conexao\\\"\\n    }\\n  ]\\n}\\n\\n**EXEMPLO DE FLUXOGRAMA BEM ESTRUTURADO:**\\n\\n{\\n  \\\"nodes\\\": [\\n    {\\\"id\\\": \\\"start\\\", \\\"type\\\": \\\"input\\\", \\\"label\\\": \\\"In\\xEDcio do Processo\\\", \\\"position\\\": {\\\"x\\\": 100, \\\"y\\\": 100}},\\n    {\\\"id\\\": \\\"login\\\", \\\"type\\\": \\\"process\\\", \\\"label\\\": \\\"Processar Login\\\", \\\"position\\\": {\\\"x\\\": 300, \\\"y\\\": 100}},\\n    {\\\"id\\\": \\\"auth_check\\\", \\\"type\\\": \\\"decision\\\", \\\"label\\\": \\\"Credenciais V\\xE1lidas?\\\", \\\"position\\\": {\\\"x\\\": 500, \\\"y\\\": 100}},\\n    {\\\"id\\\": \\\"dashboard\\\", \\\"type\\\": \\\"process\\\", \\\"label\\\": \\\"Carregar Dashboard\\\", \\\"position\\\": {\\\"x\\\": 300, \\\"y\\\": 300}},\\n    {\\\"id\\\": \\\"error\\\", \\\"type\\\": \\\"output\\\", \\\"label\\\": \\\"Mostrar Erro\\\", \\\"position\\\": {\\\"x\\\": 700, \\\"y\\\": 100}},\\n    {\\\"id\\\": \\\"logout\\\", \\\"type\\\": \\\"output\\\", \\\"label\\\": \\\"Logout do Sistema\\\", \\\"position\\\": {\\\"x\\\": 500, \\\"y\\\": 300}}\\n  ],\\n  \\\"edges\\\": [\\n    {\\\"id\\\": \\\"e1\\\", \\\"source\\\": \\\"start\\\", \\\"target\\\": \\\"login\\\"},\\n    {\\\"id\\\": \\\"e2\\\", \\\"source\\\": \\\"login\\\", \\\"target\\\": \\\"auth_check\\\"},\\n    {\\\"id\\\": \\\"e3\\\", \\\"source\\\": \\\"auth_check\\\", \\\"target\\\": \\\"dashboard\\\", \\\"label\\\": \\\"Sim\\\"},\\n    {\\\"id\\\": \\\"e4\\\", \\\"source\\\": \\\"auth_check\\\", \\\"target\\\": \\\"error\\\", \\\"label\\\": \\\"N\\xE3o\\\"},\\n    {\\\"id\\\": \\\"e5\\\", \\\"source\\\": \\\"dashboard\\\", \\\"target\\\": \\\"logout\\\"}\\n  ]\\n}\\n\\n**REGRAS IMPORTANTES:**\\n- Use IDs \\xFAnicos para todos os n\\xF3s e edges\\n- Todas as conex\\xF5es devem referenciar IDs existentes\\n- Posi\\xE7\\xF5es devem formar um layout l\\xF3gico e leg\\xEDvel\\n- Labels devem ser concisos mas descritivos\\n- Certifique-se de que o JSON seja v\\xE1lido e parse\\xE1vel\",tasks:\"Voc\\xEA \\xE9 um especialista em gerenciamento de projetos \\xE1geis e cria\\xE7\\xE3o de tarefas detalhadas.\\nCom base nos documentos fornecidos, analise o projeto e crie uma estrutura completa de \\xC9PICOS e TASKS seguindo as melhores pr\\xE1ticas \\xE1geis.\\n\\n**INSTRU\\xC7\\xD5ES IMPORTANTES:**\\n\\n1. **AN\\xC1LISE DO PROJETO**: Primeiro, identifique os principais m\\xF3dulos/componentes do sistema e funcionalidades principais.\\n\\n2. **CRIA\\xC7\\xC3O DE \\xC9PICOS**: Cada \\xE9pico deve representar uma funcionalidade ou m\\xF3dulo principal do sistema.\\n   - Use nomes descritivos e objetivos\\n   - Inclua descri\\xE7\\xE3o detalhada do que o \\xE9pico abrange\\n   - Defina prioridade baseada na criticidade para o neg\\xF3cio\\n\\n3. **CRIA\\xC7\\xC3O DE TASKS**: Para cada \\xE9pico, crie tasks espec\\xEDficas e mensur\\xE1veis.\\n   - Cada task deve ter um objetivo claro e espec\\xEDfico\\n   - Use verbos de a\\xE7\\xE3o no t\\xEDtulo (Implementar, Criar, Configurar, etc.)\\n   - Defina story points realistas baseados na complexidade\\n   - Categorize corretamente por tipo de trabalho\\n   - Inclua crit\\xE9rios de aceite espec\\xEDficos e test\\xE1veis\\n\\n4. **ESTRUTURA OBRIGAT\\xD3RIA**: Retorne APENAS um JSON v\\xE1lido com esta estrutura:\\n\\n{\\n  \\\"epics\\\": [\\n    {\\n      \\\"title\\\": \\\"Nome descritivo do \\xE9pico\\\",\\n      \\\"description\\\": \\\"Descri\\xE7\\xE3o detalhada do que este \\xE9pico abrange, incluindo objetivos e contexto\\\",\\n      \\\"priority\\\": \\\"high|medium|low\\\"\\n    }\\n  ],\\n  \\\"tasks\\\": [\\n    {\\n      \\\"title\\\": \\\"Verbo + Objetivo espec\\xEDfico da task\\\",\\n      \\\"description\\\": \\\"Descri\\xE7\\xE3o detalhada do que deve ser implementado, incluindo contexto e depend\\xEAncias\\\",\\n      \\\"story_points\\\": 1|2|3|5|8|13,\\n      \\\"category\\\": \\\"frontend|backend|design|testing|devops|database|security|documentation|infrastructure|mobile|api\\\",\\n      \\\"epic_index\\\": 0,\\n      \\\"acceptance_criteria\\\": [\\n        \\\"Crit\\xE9rio espec\\xEDfico e test\\xE1vel 1\\\",\\n        \\\"Crit\\xE9rio espec\\xEDfico e test\\xE1vel 2\\\",\\n        \\\"Crit\\xE9rio espec\\xEDfico e test\\xE1vel 3\\\"\\n      ],\\n      \\\"priority\\\": \\\"high|medium|low\\\",\\n      \\\"estimated_hours\\\": 2|4|8|16|24|40\\n    }\\n  ]\\n}\\n\\n**DIRETRIZES PARA STORY POINTS:**\\n- 1: Tarefa muito simples, poucos minutos\\n- 2: Tarefa simples, at\\xE9 2 horas\\n- 3: Tarefa m\\xE9dia, at\\xE9 4 horas\\n- 5: Tarefa complexa, at\\xE9 8 horas\\n- 8: Tarefa muito complexa, at\\xE9 16 horas\\n- 13: Tarefa extremamente complexa, at\\xE9 24+ horas\\n\\n**CATEGORIAS DISPON\\xCDVEIS:**\\n- frontend: Interface do usu\\xE1rio, componentes React/Vue/Angular\\n- backend: APIs, l\\xF3gica de neg\\xF3cio, servi\\xE7os\\n- design: UI/UX, prot\\xF3tipos, wireframes\\n- testing: Testes unit\\xE1rios, integra\\xE7\\xE3o, e2e\\n- devops: CI/CD, infraestrutura, deploy\\n- database: Modelagem, migrations, otimiza\\xE7\\xE3o\\n- security: Autentica\\xE7\\xE3o, autoriza\\xE7\\xE3o, criptografia\\n- documentation: Documenta\\xE7\\xE3o t\\xE9cnica e de usu\\xE1rio\\n- infrastructure: Servidores, redes, configura\\xE7\\xE3o\\n- mobile: Apps mobile, responsividade\\n- api: Integra\\xE7\\xF5es, webhooks, APIs externas\\n\\n**EXEMPLO DE TASK BEM ESTRUTURADA:**\\n{\\n  \\\"title\\\": \\\"Implementar sistema de autentica\\xE7\\xE3o OAuth2\\\",\\n  \\\"description\\\": \\\"Criar sistema completo de login usando Google OAuth2, incluindo middleware, valida\\xE7\\xE3o de tokens e refresh tokens\\\",\\n  \\\"story_points\\\": 8,\\n  \\\"category\\\": \\\"backend\\\",\\n  \\\"epic_index\\\": 0,\\n  \\\"acceptance_criteria\\\": [\\n    \\\"Usu\\xE1rio pode fazer login com Google\\\",\\n    \\\"Token JWT \\xE9 gerado e validado corretamente\\\",\\n    \\\"Middleware de autentica\\xE7\\xE3o protege rotas\\\",\\n    \\\"Refresh token funciona para renovar sess\\xE3o\\\",\\n    \\\"Logout invalida tokens corretamente\\\"\\n  ],\\n  \\\"priority\\\": \\\"high\\\",\\n  \\\"estimated_hours\\\": 16\\n}\"};// Cache para prompts globais\nlet cachedPrompts=null;let cacheTimestamp=0;const CACHE_DURATION=5*60*1000;// 5 minutos\n// Fun√ß√£o para obter prompts globais do banco de dados\n// NOTA: Os prompts globais devem conter APENAS contexto espec√≠fico do dom√≠nio/neg√≥cio\n// Instru√ß√µes t√©cnicas sobre formato de resposta ficam nos DEFAULT_PROMPTS\nexport const getGlobalPrompts=async()=>{try{// Verificar cache\nconst now=Date.now();if(cachedPrompts&&now-cacheTimestamp<CACHE_DURATION){return cachedPrompts;}// Buscar do banco de dados (apenas prompts ativos)\nconst{data,error}=await supabase.from('global_prompts').select('*').eq('is_active',true);if(error&&error.message.includes('relation \"global_prompts\" does not exist')){// Usar prompts padr√£o se a tabela n√£o existir\ncachedPrompts=DEFAULT_PROMPTS;cacheTimestamp=now;return cachedPrompts;}else if(error){console.error('Erro ao buscar prompts globais:',error);return DEFAULT_PROMPTS;}// Converter array para objeto - apenas contexto espec√≠fico, n√£o instru√ß√µes t√©cnicas\nconst promptsObject=_objectSpread({},DEFAULT_PROMPTS);if(data&&Array.isArray(data)){data.forEach(prompt=>{if(prompt.type&&prompt.content){// Se o conte√∫do for diferente do padr√£o, assume que √© contexto espec√≠fico\nif(prompt.content!==DEFAULT_PROMPTS[prompt.type]){promptsObject[prompt.type]=prompt.content;}}});}cachedPrompts=promptsObject;cacheTimestamp=now;return cachedPrompts;}catch(error){console.error('Erro ao obter prompts globais:',error);return DEFAULT_PROMPTS;}};// Fun√ß√£o para invalidar cache de prompts\nexport const invalidatePromptsCache=()=>{cachedPrompts=null;cacheTimestamp=0;};// Fun√ß√£o para gerar prompt espec√≠fico baseado no tipo\n// Fun√ß√£o para buscar materiais de apoio de um projeto\nconst getProjectSupportMaterials=async projectId=>{try{console.log('üîç Buscando materiais de apoio do projeto:',projectId);// Primeiro tentar buscar materiais espec√≠ficos do projeto\nlet{data,error}=await supportMaterials.list(projectId);// Se n√£o encontrar materiais espec√≠ficos, buscar materiais padr√£o/globais\nif(!data||data.length===0){console.log('‚ö†Ô∏è Nenhum material espec√≠fico encontrado, buscando materiais padr√£o...');const{data:defaultData,error:defaultError}=await supabase.from('support_materials').select('*').eq('is_default',true).order('created_at',{ascending:false});if(!defaultError&&defaultData&&defaultData.length>0){console.log('‚úÖ Materiais padr√£o encontrados:',defaultData.length);data=defaultData;}}if(error){console.error('‚ùå Erro ao buscar materiais de apoio:',error);return{};}// Organizar por tipo\nconst materialsByType={};(data||[]).forEach(material=>{materialsByType[material.type]=material.content;console.log(\"\\uD83D\\uDCC4 Material \".concat(material.type,\" encontrado:\"),material.content.substring(0,100)+'...');console.log(\"\\uD83D\\uDCCA Detalhes do material \".concat(material.type,\":\"),{id:material.id,name:material.name,type:material.type,is_default:material.is_default,content_length:material.content.length});});console.log('‚úÖ Materiais de apoio encontrados:',Object.keys(materialsByType));console.log('üìã Resumo dos materiais por tipo:',Object.keys(materialsByType).map(type=>{var _materialsByType$type;return{type,length:((_materialsByType$type=materialsByType[type])===null||_materialsByType$type===void 0?void 0:_materialsByType$type.length)||0};}));return materialsByType;}catch(error){console.error('‚ùå Erro ao buscar materiais de apoio:',error);return{};}};const generatePrompt=async(type,documentContent,additionalInfo,projectId)=>{const globalPrompts=await getGlobalPrompts();// Usar instru√ß√µes t√©cnicas do prompt hardcoded + contexto espec√≠fico do global\nconst technicalInstructions=DEFAULT_PROMPTS[type];const domainContext=globalPrompts[type];// Combinar: instru√ß√µes t√©cnicas + contexto espec√≠fico + conte√∫do\nlet finalPrompt=technicalInstructions;// Adicionar contexto espec√≠fico se existir e for diferente do padr√£o\nif(domainContext&&domainContext!==technicalInstructions){finalPrompt+=\"\\n\\n--- CONTEXTO ESPEC\\xCDFICO DO DOM\\xCDNIO ---\\n\".concat(domainContext);}// Buscar e adicionar materiais de apoio se projectId for fornecido\nif(projectId){console.log(\"\\uD83D\\uDD0D Buscando materiais de apoio do tipo \\\"\".concat(type,\"\\\" para o projeto: \").concat(projectId));const supportMaterials=await getProjectSupportMaterials(projectId);const projectMaterial=supportMaterials[type];if(projectMaterial){finalPrompt+=\"\\n\\n--- MATERIAL DE APOIO PERSONALIZADO (\".concat(type.toUpperCase(),\") ---\\n\").concat(projectMaterial);console.log(\"\\u2705 Material de apoio \".concat(type,\" adicionado ao prompt (\").concat(projectMaterial.length,\" caracteres)\"));console.log(\"\\uD83D\\uDCCB Conte\\xFAdo do material \".concat(type,\":\"),projectMaterial.substring(0,150)+'...');}else{console.log(\"\\u26A0\\uFE0F Nenhum material de apoio \".concat(type,\" encontrado para o projeto \").concat(projectId));console.log(\"\\uD83D\\uDCCA Materiais dispon\\xEDveis:\",Object.keys(supportMaterials));}}else{console.log(\"\\u2139\\uFE0F Sem projectId fornecido, usando apenas prompts padr\\xE3o\");}// Adicionar conte√∫do dos documentos\nfinalPrompt+=\"\\n\\n--- CONTE\\xDADO DOS DOCUMENTOS ---\\n\".concat(documentContent);// Adicionar informa√ß√µes adicionais se fornecidas\nif(additionalInfo.trim()){finalPrompt+=\"\\n\\n--- INFORMA\\xC7\\xD5ES ADICIONAIS ---\\n\".concat(additionalInfo);}return finalPrompt;};export const validateApiKey=()=>{if(!API_KEY){console.error('‚ùå API key do Gemini n√£o configurada');console.error('üìù Configure REACT_APP_GEMINI_API_KEY no arquivo .env');console.error('üîë Obtenha sua API key em: https://makersuite.google.com/app/apikey');return false;}// Verificar se a API key tem formato v√°lido (chaves do Google AI come√ßam com \"AIza\")\nconst isValidFormat=API_KEY.startsWith('AIza');if(!isValidFormat){console.error('‚ùå Formato da API key inv√°lido. As chaves do Google AI come√ßam com \"AIza\"');console.error('üîç Sua chave atual:',API_KEY.substring(0,10)+'...');return false;}console.log('‚úÖ API key do Gemini configurada corretamente');return true;};// Fun√ß√£o para testar conex√£o com Gemini\nexport const testGeminiConnection=async()=>{console.log('üß™ Testando conex√£o com Gemini...');if(!validateApiKey()){return false;}try{if(!genAI){console.error('‚ùå Falha ao inicializar servi√ßo do Gemini');return false;}const model=genAI.getGenerativeModel({model:'gemini-2.0-flash-exp'});// Teste simples com prompt m√≠nimo\nconst testPrompt='Responda apenas com \"OK\" se voc√™ recebeu esta mensagem.';const result=await model.generateContent(testPrompt);const response=await result.response;const text=response.text();console.log('‚úÖ Conex√£o com Gemini funcionando:',text.trim());return true;}catch(error){console.error('‚ùå Erro na conex√£o com Gemini:',error.message);return false;}};// Fun√ß√£o de debug para verificar materiais de apoio\nexport const debugSupportMaterials=async projectId=>{console.log('üîç DEBUG: Verificando materiais de apoio...');try{// Verificar materiais espec√≠ficos do projeto\nif(projectId){console.log(\"\\uD83D\\uDCCA Verificando materiais para projeto: \".concat(projectId));const{data:projectMaterials}=await supportMaterials.list(projectId);console.log('üìã Materiais espec√≠ficos do projeto:',(projectMaterials===null||projectMaterials===void 0?void 0:projectMaterials.length)||0);}// Verificar materiais padr√£o/globais\nconst{data:defaultMaterials,error}=await supabase.from('support_materials').select('*').eq('is_default',true).order('created_at',{ascending:false});if(error){console.error('‚ùå Erro ao buscar materiais padr√£o:',error);return;}console.log('üìã Materiais padr√£o encontrados:',(defaultMaterials===null||defaultMaterials===void 0?void 0:defaultMaterials.length)||0);if(defaultMaterials&&defaultMaterials.length>0){defaultMaterials.forEach(material=>{console.log(\"  - \".concat(material.type,\": \").concat(material.name,\" (\").concat(material.content.length,\" chars)\"));});}else{console.log('‚ö†Ô∏è Nenhum material padr√£o encontrado! Configure na tela de materiais de apoio.');}}catch(error){console.error('‚ùå Erro no debug de materiais:',error);}};// Fun√ß√£o para processar documentos e gerar conte√∫do espec√≠fico\nexport const generateContent=async(type,documents,additionalInfo,projectId)=>{try{// Valida√ß√£o da API key\nif(!API_KEY){throw new Error('API key do Gemini n√£o configurada. Configure REACT_APP_GEMINI_API_KEY no arquivo .env');}if(!genAI){throw new Error('Falha ao inicializar o servi√ßo do Gemini. Verifique se a API key √© v√°lida');}const model=genAI.getGenerativeModel({model:'gemini-2.0-flash-exp'});// Preparar o conte√∫do dos documentos\nlet documentContent='';documents.forEach((doc,index)=>{documentContent+=\"\\n--- DOCUMENTO \".concat(index+1,\": \").concat(doc.name,\" ---\\n\");documentContent+=doc.content;documentContent+='\\n';});const prompt=await generatePrompt(type,documentContent,additionalInfo,projectId);const result=await model.generateContent(prompt);const response=await result.response;const text=response.text();// Processar resposta baseado no tipo\nswitch(type){case'pr':// Para PR, retorna o texto diretamente\nreturn text.trim();case'flowchart':case'tasks':// Para flowchart e tasks, tenta extrair JSON\ntry{let jsonText='';// M√©todo 1: Tentar extrair JSON de blocos de c√≥digo markdown\nconst codeBlockMatch=text.match(/```(?:json)?\\s*(\\{[\\s\\S]*?\\})\\s*```/);if(codeBlockMatch){jsonText=codeBlockMatch[1];}else{// M√©todo 2: Procurar por JSON v√°lido na resposta\nconst jsonMatch=text.match(/\\{[\\s\\S]*\\}/);if(jsonMatch){jsonText=jsonMatch[0];}}if(jsonText){// Limpar o texto JSON (remover espa√ßos extras, quebras de linha desnecess√°rias)\njsonText=jsonText.trim();// Verificar se √© um JSON v√°lido antes de parsear\ntry{JSON.parse(jsonText);console.log(\"\\u2705 JSON \".concat(type,\" parseado com sucesso\"));return JSON.parse(jsonText);}catch(parseError){console.error(\"\\u274C JSON \".concat(type,\" inv\\xE1lido:\"),parseError);console.error('Texto que falhou:',jsonText);throw new Error(\"JSON \".concat(type,\" inv\\xE1lido: \").concat((parseError===null||parseError===void 0?void 0:parseError.message)||'Erro desconhecido'));}}else{console.error('‚ùå Nenhum JSON encontrado na resposta:',text);throw new Error('Resposta da IA n√£o cont√©m JSON v√°lido');}}catch(jsonError){console.error('Erro ao processar resposta JSON:',jsonError);console.error('Resposta completa da IA:',text);throw new Error(\"Erro na resposta da IA. Formato JSON inv\\xE1lido: \".concat((jsonError===null||jsonError===void 0?void 0:jsonError.message)||'Erro desconhecido'));}default:throw new Error(\"Tipo de conte\\xFAdo n\\xE3o suportado: \".concat(type));}}catch(error){var _error$message,_error$message2,_error$message3,_error$message4,_error$message5;console.error('‚ùå Erro ao gerar conte√∫do:',error);// Tratamento espec√≠fico de erros comuns\nif((_error$message=error.message)!==null&&_error$message!==void 0&&_error$message.includes('API key')){throw new Error('API key do Gemini n√£o configurada. Configure REACT_APP_GEMINI_API_KEY no arquivo .env');}if((_error$message2=error.message)!==null&&_error$message2!==void 0&&_error$message2.includes('quota')||(_error$message3=error.message)!==null&&_error$message3!==void 0&&_error$message3.includes('limit')){throw new Error('Limite de uso da API do Gemini excedido. Tente novamente mais tarde');}if((_error$message4=error.message)!==null&&_error$message4!==void 0&&_error$message4.includes('network')||(_error$message5=error.message)!==null&&_error$message5!==void 0&&_error$message5.includes('fetch')){throw new Error('Erro de conex√£o. Verifique sua internet e tente novamente');}// Erro gen√©rico com mais detalhes\nthrow new Error(\"Falha ao gerar conte\\xFAdo: \".concat(error.message||'Erro desconhecido'));}};// Fun√ß√£o legada para compatibilidade (gera todos os tipos de conte√∫do)\nexport const processDocuments=async(documents,additionalInfo,projectId)=>{console.log('üöÄ Iniciando processamento de documentos...');console.log('üìÑ Documentos recebidos:',documents.length);console.log('üìù Informa√ß√µes adicionais:',additionalInfo?'Sim':'N√£o');try{// Verificar API key primeiro\nif(!API_KEY){throw new Error('API key do Gemini n√£o configurada. Configure REACT_APP_GEMINI_API_KEY no arquivo .env');}console.log('‚úÖ API key configurada');let prContent='';let flowchartData={nodes:[],edges:[]};let tasksData={epics:[],tasks:[]};// Gerar PR\ntry{console.log('üìã Gerando PR...');prContent=await generateContent('pr',documents,additionalInfo,projectId);console.log('‚úÖ PR gerado com sucesso:',prContent.length,'caracteres');}catch(error){console.error('‚ùå Erro ao gerar PR:',error.message);prContent=\"Erro ao gerar PR: \".concat(error.message);}// Gerar flowchart\ntry{var _flowchartData$nodes,_flowchartData$edges;console.log('üìä Gerando fluxograma...');flowchartData=await generateContent('flowchart',documents,additionalInfo,projectId);console.log('‚úÖ Fluxograma gerado:',((_flowchartData$nodes=flowchartData.nodes)===null||_flowchartData$nodes===void 0?void 0:_flowchartData$nodes.length)||0,'n√≥s,',((_flowchartData$edges=flowchartData.edges)===null||_flowchartData$edges===void 0?void 0:_flowchartData$edges.length)||0,'conex√µes');}catch(error){console.error('‚ùå Erro ao gerar fluxograma:',error.message);flowchartData={nodes:[],edges:[]};}// Gerar tasks\ntry{var _tasksData$tasks,_tasksData$epics;console.log('üìù Gerando tasks...');tasksData=await generateContent('tasks',documents,additionalInfo,projectId);console.log('‚úÖ Tasks geradas:',((_tasksData$tasks=tasksData.tasks)===null||_tasksData$tasks===void 0?void 0:_tasksData$tasks.length)||0,'tasks,',((_tasksData$epics=tasksData.epics)===null||_tasksData$epics===void 0?void 0:_tasksData$epics.length)||0,'√©picos');}catch(error){console.error('‚ùå Erro ao gerar tasks:',error.message);tasksData={epics:[],tasks:[]};}// Converter tasks para o formato esperado\nconst tasks=[];if(tasksData.tasks&&Array.isArray(tasksData.tasks)){tasksData.tasks.forEach((task,index)=>{tasks.push({id:\"task-\".concat(index+1),title:task.title,description:task.description,storyPoints:task.story_points,status:'pending',category:task.category,criteria:task.acceptance_criteria||[]});});}const result={title:documents.length>0?documents[0].name:'Projeto',description:prContent.substring(0,200)+'...',flowchart:flowchartData,tasks:tasks};console.log('üéâ Processamento conclu√≠do com sucesso!');return result;}catch(error){console.error('‚ùå Erro cr√≠tico ao processar documentos:',error);// Retornar resultado parcial se poss√≠vel\nconst fallbackResult={title:documents.length>0?documents[0].name:'Projeto',description:'Erro ao processar documentos: '+error.message,flowchart:{nodes:[],edges:[]},tasks:[]};console.log('‚ö†Ô∏è Retornando resultado fallback devido ao erro');return fallbackResult;}};export const extractTextFromFile=async file=>{// Implementa√ß√£o b√°sica para extra√ß√£o de texto\n// Em um ambiente real, voc√™ precisaria de bibliotecas espec√≠ficas para cada tipo de arquivo\nif(file.type==='text/markdown'||file.type==='text/plain'){return await file.text();}else if(file.type==='application/pdf'){// Para PDF, voc√™ precisaria de uma biblioteca como pdf-parse\nthrow new Error('Processamento de PDF ainda n√£o implementado');}else if(file.type.includes('document')){// Para DOCX, voc√™ precisaria de uma biblioteca como mammoth\nthrow new Error('Processamento de DOCX ainda n√£o implementado');}return'';};","map":{"version":3,"names":["GoogleGenerativeAI","supabase","supportMaterials","API_KEY","process","env","REACT_APP_GEMINI_API_KEY","console","error","genAI","DEFAULT_PROMPTS","pr","flowchart","tasks","cachedPrompts","cacheTimestamp","CACHE_DURATION","getGlobalPrompts","now","Date","data","from","select","eq","message","includes","promptsObject","_objectSpread","Array","isArray","forEach","prompt","type","content","invalidatePromptsCache","getProjectSupportMaterials","projectId","log","list","length","defaultData","defaultError","order","ascending","materialsByType","material","concat","substring","id","name","is_default","content_length","Object","keys","map","_materialsByType$type","generatePrompt","documentContent","additionalInfo","globalPrompts","technicalInstructions","domainContext","finalPrompt","projectMaterial","toUpperCase","trim","validateApiKey","isValidFormat","startsWith","testGeminiConnection","model","getGenerativeModel","testPrompt","result","generateContent","response","text","debugSupportMaterials","projectMaterials","defaultMaterials","documents","Error","doc","index","jsonText","codeBlockMatch","match","jsonMatch","JSON","parse","parseError","jsonError","_error$message","_error$message2","_error$message3","_error$message4","_error$message5","processDocuments","prContent","flowchartData","nodes","edges","tasksData","epics","_flowchartData$nodes","_flowchartData$edges","_tasksData$tasks","_tasksData$epics","task","push","title","description","storyPoints","story_points","status","category","criteria","acceptance_criteria","fallbackResult","extractTextFromFile","file"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/services/geminiService.ts"],"sourcesContent":["/**\n * ARQUITETURA DE PROMPTS - IMPORTANTE\n *\n * 1. DEFAULT_PROMPTS (hardcoded): Cont√©m instru√ß√µes t√©cnicas sobre:\n *    - Como a IA deve se comportar (papel/fun√ß√£o)\n *    - Formato de resposta esperado (JSON, texto, etc.)\n *    - Estrutura de dados obrigat√≥ria\n *    - Regras de parsing e valida√ß√£o\n *\n * 2. PROMPTS GLOBAIS (banco de dados): Devem conter APENAS:\n *    - Contexto espec√≠fico do dom√≠nio/neg√≥cio\n *    - Informa√ß√µes contextuais adicionais\n *    - Prefer√™ncias espec√≠ficas do cliente/usu√°rio\n *    - NUNCA instru√ß√µes t√©cnicas sobre formato de resposta\n *\n *    EXEMPLOS de prompts globais (APENAS contexto):\n *    - \"Este √© um sistema de e-commerce para vendas online\"\n *    - \"Cliente trabalha com gest√£o de cl√≠nicas m√©dicas\"\n *    - \"Priorizar seguran√ßa e conformidade com LGPD\"\n *    - \"Sistema deve ser compat√≠vel com dispositivos m√≥veis\"\n *\n * 3. CONTE√öDO DIN√ÇMICO:\n *    - Conte√∫do dos documentos do projeto\n *    - Informa√ß√µes adicionais fornecidas pelo usu√°rio\n *\n * Combina√ß√£o final: Instru√ß√µes T√©cnicas + Contexto Espec√≠fico + Conte√∫do do Projeto\n */\n\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { DocumentFile, ProjectScope } from '../types';\nimport { supabase } from '../lib/supabase';\nimport { supportMaterials } from '../lib/supabase';\n\n// Configura√ß√£o da API key do Gemini\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY || '';\n\nif (!API_KEY) {\n  console.error('‚ùå REACT_APP_GEMINI_API_KEY n√£o configurada no arquivo .env');\n  console.error('üìù Para configurar: crie um arquivo .env na raiz do projeto com:');\n  console.error('   REACT_APP_GEMINI_API_KEY=sua_api_key_aqui');\n  console.error('üîë Obtenha sua API key em: https://makersuite.google.com/app/apikey');\n}\n\nlet genAI: GoogleGenerativeAI;\ntry {\n  genAI = new GoogleGenerativeAI(API_KEY);\n} catch (error) {\n  console.error('‚ùå Erro ao inicializar GoogleGenerativeAI:', error);\n}\n\n// Prompts padr√£o (fallback)\nconst DEFAULT_PROMPTS = {\n  pr: `Voc√™ √© um especialista em an√°lise de requisitos e cria√ß√£o de documentos t√©cnicos.\nCom base nos documentos fornecidos, gere um DOCUMENTO T√âCNICO DETALHADO (PR) incluindo:\n- Vis√£o geral do projeto\n- Objetivos e metas\n- Arquitetura proposta\n- Tecnologias e ferramentas\n- Estimativa de esfor√ßo\n- Riscos identificados\n- Prazos estimados\n- Or√ßamento aproximado\n\nRetorne apenas o texto do documento t√©cnico, sem formata√ß√£o JSON.`,\n\n  flowchart: `Voc√™ √© um especialista em modelagem de processos e cria√ß√£o de fluxogramas t√©cnicos.\nCom base nos documentos fornecidos, gere um FLUXOGRAMA em formato JSON v√°lido que represente o fluxo completo do projeto/processo.\n\n**INSTRU√á√ïES IMPORTANTES:**\n\n1. **AN√ÅLISE DO PROCESSO**: Identifique as etapas principais do processo, pontos de decis√£o, entradas e sa√≠das.\n\n2. **CRIA√á√ÉO DE N√ìS**:\n   - **input**: Pontos de entrada, in√≠cio do processo\n   - **process**: Atividades, tarefas, processamento de dados\n   - **output**: Resultados, fim do processo\n   - **decision**: Pontos de decis√£o com ramifica√ß√µes (sim/n√£o)\n\n3. **POSICIONAMENTO**: Distribua os n√≥s de forma l√≥gica no diagrama:\n   - Fluxo de cima para baixo ou esquerda para direita\n   - Agrupe n√≥s relacionados\n   - Mantenha dist√¢ncia adequada entre n√≥s\n\n4. **CONEX√ïES**: Cada edge deve conectar exatamente 2 n√≥s existentes.\n\n**ESTRUTURA OBRIGAT√ìRIA**: Retorne APENAS um JSON v√°lido (sem texto adicional):\n\n{\n  \"nodes\": [\n    {\n      \"id\": \"string_unico\",\n      \"type\": \"input|process|output|decision\",\n      \"label\": \"Descri√ß√£o clara e concisa do n√≥\",\n      \"position\": {\"x\": number, \"y\": number}\n    }\n  ],\n  \"edges\": [\n    {\n      \"id\": \"edge_string_unico\",\n      \"source\": \"id_do_no_origem\",\n      \"target\": \"id_do_no_destino\",\n      \"label\": \"r√≥tulo_opcional_da_conexao\"\n    }\n  ]\n}\n\n**EXEMPLO DE FLUXOGRAMA BEM ESTRUTURADO:**\n\n{\n  \"nodes\": [\n    {\"id\": \"start\", \"type\": \"input\", \"label\": \"In√≠cio do Processo\", \"position\": {\"x\": 100, \"y\": 100}},\n    {\"id\": \"login\", \"type\": \"process\", \"label\": \"Processar Login\", \"position\": {\"x\": 300, \"y\": 100}},\n    {\"id\": \"auth_check\", \"type\": \"decision\", \"label\": \"Credenciais V√°lidas?\", \"position\": {\"x\": 500, \"y\": 100}},\n    {\"id\": \"dashboard\", \"type\": \"process\", \"label\": \"Carregar Dashboard\", \"position\": {\"x\": 300, \"y\": 300}},\n    {\"id\": \"error\", \"type\": \"output\", \"label\": \"Mostrar Erro\", \"position\": {\"x\": 700, \"y\": 100}},\n    {\"id\": \"logout\", \"type\": \"output\", \"label\": \"Logout do Sistema\", \"position\": {\"x\": 500, \"y\": 300}}\n  ],\n  \"edges\": [\n    {\"id\": \"e1\", \"source\": \"start\", \"target\": \"login\"},\n    {\"id\": \"e2\", \"source\": \"login\", \"target\": \"auth_check\"},\n    {\"id\": \"e3\", \"source\": \"auth_check\", \"target\": \"dashboard\", \"label\": \"Sim\"},\n    {\"id\": \"e4\", \"source\": \"auth_check\", \"target\": \"error\", \"label\": \"N√£o\"},\n    {\"id\": \"e5\", \"source\": \"dashboard\", \"target\": \"logout\"}\n  ]\n}\n\n**REGRAS IMPORTANTES:**\n- Use IDs √∫nicos para todos os n√≥s e edges\n- Todas as conex√µes devem referenciar IDs existentes\n- Posi√ß√µes devem formar um layout l√≥gico e leg√≠vel\n- Labels devem ser concisos mas descritivos\n- Certifique-se de que o JSON seja v√°lido e parse√°vel`,\n\n  tasks: `Voc√™ √© um especialista em gerenciamento de projetos √°geis e cria√ß√£o de tarefas detalhadas.\nCom base nos documentos fornecidos, analise o projeto e crie uma estrutura completa de √âPICOS e TASKS seguindo as melhores pr√°ticas √°geis.\n\n**INSTRU√á√ïES IMPORTANTES:**\n\n1. **AN√ÅLISE DO PROJETO**: Primeiro, identifique os principais m√≥dulos/componentes do sistema e funcionalidades principais.\n\n2. **CRIA√á√ÉO DE √âPICOS**: Cada √©pico deve representar uma funcionalidade ou m√≥dulo principal do sistema.\n   - Use nomes descritivos e objetivos\n   - Inclua descri√ß√£o detalhada do que o √©pico abrange\n   - Defina prioridade baseada na criticidade para o neg√≥cio\n\n3. **CRIA√á√ÉO DE TASKS**: Para cada √©pico, crie tasks espec√≠ficas e mensur√°veis.\n   - Cada task deve ter um objetivo claro e espec√≠fico\n   - Use verbos de a√ß√£o no t√≠tulo (Implementar, Criar, Configurar, etc.)\n   - Defina story points realistas baseados na complexidade\n   - Categorize corretamente por tipo de trabalho\n   - Inclua crit√©rios de aceite espec√≠ficos e test√°veis\n\n4. **ESTRUTURA OBRIGAT√ìRIA**: Retorne APENAS um JSON v√°lido com esta estrutura:\n\n{\n  \"epics\": [\n    {\n      \"title\": \"Nome descritivo do √©pico\",\n      \"description\": \"Descri√ß√£o detalhada do que este √©pico abrange, incluindo objetivos e contexto\",\n      \"priority\": \"high|medium|low\"\n    }\n  ],\n  \"tasks\": [\n    {\n      \"title\": \"Verbo + Objetivo espec√≠fico da task\",\n      \"description\": \"Descri√ß√£o detalhada do que deve ser implementado, incluindo contexto e depend√™ncias\",\n      \"story_points\": 1|2|3|5|8|13,\n      \"category\": \"frontend|backend|design|testing|devops|database|security|documentation|infrastructure|mobile|api\",\n      \"epic_index\": 0,\n      \"acceptance_criteria\": [\n        \"Crit√©rio espec√≠fico e test√°vel 1\",\n        \"Crit√©rio espec√≠fico e test√°vel 2\",\n        \"Crit√©rio espec√≠fico e test√°vel 3\"\n      ],\n      \"priority\": \"high|medium|low\",\n      \"estimated_hours\": 2|4|8|16|24|40\n    }\n  ]\n}\n\n**DIRETRIZES PARA STORY POINTS:**\n- 1: Tarefa muito simples, poucos minutos\n- 2: Tarefa simples, at√© 2 horas\n- 3: Tarefa m√©dia, at√© 4 horas\n- 5: Tarefa complexa, at√© 8 horas\n- 8: Tarefa muito complexa, at√© 16 horas\n- 13: Tarefa extremamente complexa, at√© 24+ horas\n\n**CATEGORIAS DISPON√çVEIS:**\n- frontend: Interface do usu√°rio, componentes React/Vue/Angular\n- backend: APIs, l√≥gica de neg√≥cio, servi√ßos\n- design: UI/UX, prot√≥tipos, wireframes\n- testing: Testes unit√°rios, integra√ß√£o, e2e\n- devops: CI/CD, infraestrutura, deploy\n- database: Modelagem, migrations, otimiza√ß√£o\n- security: Autentica√ß√£o, autoriza√ß√£o, criptografia\n- documentation: Documenta√ß√£o t√©cnica e de usu√°rio\n- infrastructure: Servidores, redes, configura√ß√£o\n- mobile: Apps mobile, responsividade\n- api: Integra√ß√µes, webhooks, APIs externas\n\n**EXEMPLO DE TASK BEM ESTRUTURADA:**\n{\n  \"title\": \"Implementar sistema de autentica√ß√£o OAuth2\",\n  \"description\": \"Criar sistema completo de login usando Google OAuth2, incluindo middleware, valida√ß√£o de tokens e refresh tokens\",\n  \"story_points\": 8,\n  \"category\": \"backend\",\n  \"epic_index\": 0,\n  \"acceptance_criteria\": [\n    \"Usu√°rio pode fazer login com Google\",\n    \"Token JWT √© gerado e validado corretamente\",\n    \"Middleware de autentica√ß√£o protege rotas\",\n    \"Refresh token funciona para renovar sess√£o\",\n    \"Logout invalida tokens corretamente\"\n  ],\n  \"priority\": \"high\",\n  \"estimated_hours\": 16\n}`\n};\n\n// Cache para prompts globais\nlet cachedPrompts: any = null;\nlet cacheTimestamp: number = 0;\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutos\n\n// Fun√ß√£o para obter prompts globais do banco de dados\n// NOTA: Os prompts globais devem conter APENAS contexto espec√≠fico do dom√≠nio/neg√≥cio\n// Instru√ß√µes t√©cnicas sobre formato de resposta ficam nos DEFAULT_PROMPTS\nexport const getGlobalPrompts = async (): Promise<any> => {\n  try {\n    // Verificar cache\n    const now = Date.now();\n    if (cachedPrompts && (now - cacheTimestamp) < CACHE_DURATION) {\n      return cachedPrompts;\n    }\n\n    // Buscar do banco de dados (apenas prompts ativos)\n    const { data, error } = await supabase\n      .from('global_prompts')\n      .select('*')\n      .eq('is_active', true);\n\n    if (error && error.message.includes('relation \"global_prompts\" does not exist')) {\n      // Usar prompts padr√£o se a tabela n√£o existir\n      cachedPrompts = DEFAULT_PROMPTS;\n      cacheTimestamp = now;\n      return cachedPrompts;\n    } else if (error) {\n      console.error('Erro ao buscar prompts globais:', error);\n      return DEFAULT_PROMPTS;\n    }\n\n    // Converter array para objeto - apenas contexto espec√≠fico, n√£o instru√ß√µes t√©cnicas\n    const promptsObject: any = { ...DEFAULT_PROMPTS }\n    if (data && Array.isArray(data)) {\n      data.forEach(prompt => {\n        if (prompt.type && prompt.content) {\n          // Se o conte√∫do for diferente do padr√£o, assume que √© contexto espec√≠fico\n          if (prompt.content !== DEFAULT_PROMPTS[prompt.type as keyof typeof DEFAULT_PROMPTS]) {\n            promptsObject[prompt.type] = prompt.content;\n          }\n        }\n      });\n    }\n\n    cachedPrompts = promptsObject;\n    cacheTimestamp = now;\n    return cachedPrompts;\n  } catch (error) {\n    console.error('Erro ao obter prompts globais:', error);\n    return DEFAULT_PROMPTS;\n  }\n}\n\n// Fun√ß√£o para invalidar cache de prompts\nexport const invalidatePromptsCache = () => {\n  cachedPrompts = null;\n  cacheTimestamp = 0;\n}\n\n// Fun√ß√£o para gerar prompt espec√≠fico baseado no tipo\n// Fun√ß√£o para buscar materiais de apoio de um projeto\nconst getProjectSupportMaterials = async (projectId: string) => {\n  try {\n    console.log('üîç Buscando materiais de apoio do projeto:', projectId);\n\n    // Primeiro tentar buscar materiais espec√≠ficos do projeto\n    let { data, error } = await supportMaterials.list(projectId);\n\n    // Se n√£o encontrar materiais espec√≠ficos, buscar materiais padr√£o/globais\n    if (!data || data.length === 0) {\n      console.log('‚ö†Ô∏è Nenhum material espec√≠fico encontrado, buscando materiais padr√£o...');\n      const { data: defaultData, error: defaultError } = await supabase\n        .from('support_materials')\n        .select('*')\n        .eq('is_default', true)\n        .order('created_at', { ascending: false });\n\n      if (!defaultError && defaultData && defaultData.length > 0) {\n        console.log('‚úÖ Materiais padr√£o encontrados:', defaultData.length);\n        data = defaultData;\n      }\n    }\n\n    if (error) {\n      console.error('‚ùå Erro ao buscar materiais de apoio:', error);\n      return {};\n    }\n\n    // Organizar por tipo\n    const materialsByType: any = {};\n    (data || []).forEach(material => {\n      materialsByType[material.type] = material.content;\n      console.log(`üìÑ Material ${material.type} encontrado:`, material.content.substring(0, 100) + '...');\n      console.log(`üìä Detalhes do material ${material.type}:`, {\n        id: material.id,\n        name: material.name,\n        type: material.type,\n        is_default: material.is_default,\n        content_length: material.content.length\n      });\n    });\n\n    console.log('‚úÖ Materiais de apoio encontrados:', Object.keys(materialsByType));\n    console.log('üìã Resumo dos materiais por tipo:', Object.keys(materialsByType).map(type => ({\n      type,\n      length: materialsByType[type]?.length || 0\n    })));\n    return materialsByType;\n  } catch (error) {\n    console.error('‚ùå Erro ao buscar materiais de apoio:', error);\n    return {};\n  }\n};\n\nconst generatePrompt = async (type: 'pr' | 'flowchart' | 'tasks', documentContent: string, additionalInfo: string, projectId?: string): Promise<string> => {\n  const globalPrompts = await getGlobalPrompts();\n\n  // Usar instru√ß√µes t√©cnicas do prompt hardcoded + contexto espec√≠fico do global\n  const technicalInstructions = DEFAULT_PROMPTS[type];\n  const domainContext = globalPrompts[type];\n\n  // Combinar: instru√ß√µes t√©cnicas + contexto espec√≠fico + conte√∫do\n  let finalPrompt = technicalInstructions;\n\n  // Adicionar contexto espec√≠fico se existir e for diferente do padr√£o\n  if (domainContext && domainContext !== technicalInstructions) {\n    finalPrompt += `\\n\\n--- CONTEXTO ESPEC√çFICO DO DOM√çNIO ---\\n${domainContext}`;\n  }\n\n  // Buscar e adicionar materiais de apoio se projectId for fornecido\n  if (projectId) {\n    console.log(`üîç Buscando materiais de apoio do tipo \"${type}\" para o projeto: ${projectId}`);\n    const supportMaterials = await getProjectSupportMaterials(projectId);\n    const projectMaterial = supportMaterials[type];\n\n    if (projectMaterial) {\n      finalPrompt += `\\n\\n--- MATERIAL DE APOIO PERSONALIZADO (${type.toUpperCase()}) ---\\n${projectMaterial}`;\n      console.log(`‚úÖ Material de apoio ${type} adicionado ao prompt (${projectMaterial.length} caracteres)`);\n      console.log(`üìã Conte√∫do do material ${type}:`, projectMaterial.substring(0, 150) + '...');\n    } else {\n      console.log(`‚ö†Ô∏è Nenhum material de apoio ${type} encontrado para o projeto ${projectId}`);\n      console.log(`üìä Materiais dispon√≠veis:`, Object.keys(supportMaterials));\n    }\n  } else {\n    console.log(`‚ÑπÔ∏è Sem projectId fornecido, usando apenas prompts padr√£o`);\n  }\n\n  // Adicionar conte√∫do dos documentos\n  finalPrompt += `\\n\\n--- CONTE√öDO DOS DOCUMENTOS ---\\n${documentContent}`;\n\n  // Adicionar informa√ß√µes adicionais se fornecidas\n  if (additionalInfo.trim()) {\n    finalPrompt += `\\n\\n--- INFORMA√á√ïES ADICIONAIS ---\\n${additionalInfo}`;\n  }\n\n  return finalPrompt;\n}\n\nexport const validateApiKey = (): boolean => {\n  if (!API_KEY) {\n    console.error('‚ùå API key do Gemini n√£o configurada');\n    console.error('üìù Configure REACT_APP_GEMINI_API_KEY no arquivo .env');\n    console.error('üîë Obtenha sua API key em: https://makersuite.google.com/app/apikey');\n    return false;\n  }\n\n  // Verificar se a API key tem formato v√°lido (chaves do Google AI come√ßam com \"AIza\")\n  const isValidFormat = API_KEY.startsWith('AIza');\n  if (!isValidFormat) {\n    console.error('‚ùå Formato da API key inv√°lido. As chaves do Google AI come√ßam com \"AIza\"');\n    console.error('üîç Sua chave atual:', API_KEY.substring(0, 10) + '...');\n    return false;\n  }\n\n  console.log('‚úÖ API key do Gemini configurada corretamente');\n  return true;\n}\n\n// Fun√ß√£o para testar conex√£o com Gemini\nexport const testGeminiConnection = async (): Promise<boolean> => {\n  console.log('üß™ Testando conex√£o com Gemini...');\n\n  if (!validateApiKey()) {\n    return false;\n  }\n\n  try {\n    if (!genAI) {\n      console.error('‚ùå Falha ao inicializar servi√ßo do Gemini');\n      return false;\n    }\n\n    const model = genAI.getGenerativeModel({ model: 'gemini-2.0-flash-exp' });\n\n    // Teste simples com prompt m√≠nimo\n    const testPrompt = 'Responda apenas com \"OK\" se voc√™ recebeu esta mensagem.';\n    const result = await model.generateContent(testPrompt);\n    const response = await result.response;\n    const text = response.text();\n\n    console.log('‚úÖ Conex√£o com Gemini funcionando:', text.trim());\n    return true;\n\n  } catch (error: any) {\n    console.error('‚ùå Erro na conex√£o com Gemini:', error.message);\n    return false;\n  }\n}\n\n// Fun√ß√£o de debug para verificar materiais de apoio\nexport const debugSupportMaterials = async (projectId?: string) => {\n  console.log('üîç DEBUG: Verificando materiais de apoio...');\n\n  try {\n    // Verificar materiais espec√≠ficos do projeto\n    if (projectId) {\n      console.log(`üìä Verificando materiais para projeto: ${projectId}`);\n      const { data: projectMaterials } = await supportMaterials.list(projectId);\n      console.log('üìã Materiais espec√≠ficos do projeto:', projectMaterials?.length || 0);\n    }\n\n    // Verificar materiais padr√£o/globais\n    const { data: defaultMaterials, error } = await supabase\n      .from('support_materials')\n      .select('*')\n      .eq('is_default', true)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('‚ùå Erro ao buscar materiais padr√£o:', error);\n      return;\n    }\n\n    console.log('üìã Materiais padr√£o encontrados:', defaultMaterials?.length || 0);\n    if (defaultMaterials && defaultMaterials.length > 0) {\n      defaultMaterials.forEach(material => {\n        console.log(`  - ${material.type}: ${material.name} (${material.content.length} chars)`);\n      });\n    } else {\n      console.log('‚ö†Ô∏è Nenhum material padr√£o encontrado! Configure na tela de materiais de apoio.');\n    }\n\n  } catch (error) {\n    console.error('‚ùå Erro no debug de materiais:', error);\n  }\n};\n\n// Fun√ß√£o para processar documentos e gerar conte√∫do espec√≠fico\nexport const generateContent = async (\n  type: 'pr' | 'flowchart' | 'tasks',\n  documents: DocumentFile[],\n  additionalInfo: string,\n  projectId?: string\n): Promise<any> => {\n  try {\n    // Valida√ß√£o da API key\n    if (!API_KEY) {\n      throw new Error('API key do Gemini n√£o configurada. Configure REACT_APP_GEMINI_API_KEY no arquivo .env');\n    }\n\n    if (!genAI) {\n      throw new Error('Falha ao inicializar o servi√ßo do Gemini. Verifique se a API key √© v√°lida');\n    }\n\n    const model = genAI.getGenerativeModel({ model: 'gemini-2.0-flash-exp' });\n\n    // Preparar o conte√∫do dos documentos\n    let documentContent = '';\n    documents.forEach((doc, index) => {\n      documentContent += `\\n--- DOCUMENTO ${index + 1}: ${doc.name} ---\\n`;\n      documentContent += doc.content;\n      documentContent += '\\n';\n    });\n\n    const prompt = await generatePrompt(type, documentContent, additionalInfo, projectId);\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text();\n\n    // Processar resposta baseado no tipo\n    switch (type) {\n      case 'pr':\n        // Para PR, retorna o texto diretamente\n        return text.trim();\n\n      case 'flowchart':\n      case 'tasks':\n        // Para flowchart e tasks, tenta extrair JSON\n        try {\n          let jsonText = '';\n\n          // M√©todo 1: Tentar extrair JSON de blocos de c√≥digo markdown\n          const codeBlockMatch = text.match(/```(?:json)?\\s*(\\{[\\s\\S]*?\\})\\s*```/);\n          if (codeBlockMatch) {\n            jsonText = codeBlockMatch[1];\n          } else {\n            // M√©todo 2: Procurar por JSON v√°lido na resposta\n            const jsonMatch = text.match(/\\{[\\s\\S]*\\}/);\n            if (jsonMatch) {\n              jsonText = jsonMatch[0];\n            }\n          }\n\n          if (jsonText) {\n            // Limpar o texto JSON (remover espa√ßos extras, quebras de linha desnecess√°rias)\n            jsonText = jsonText.trim();\n\n            // Verificar se √© um JSON v√°lido antes de parsear\n            try {\n              JSON.parse(jsonText);\n              console.log(`‚úÖ JSON ${type} parseado com sucesso`);\n              return JSON.parse(jsonText);\n            } catch (parseError: any) {\n              console.error(`‚ùå JSON ${type} inv√°lido:`, parseError);\n              console.error('Texto que falhou:', jsonText);\n              throw new Error(`JSON ${type} inv√°lido: ${parseError?.message || 'Erro desconhecido'}`);\n            }\n          } else {\n            console.error('‚ùå Nenhum JSON encontrado na resposta:', text);\n            throw new Error('Resposta da IA n√£o cont√©m JSON v√°lido');\n          }\n        } catch (jsonError: any) {\n          console.error('Erro ao processar resposta JSON:', jsonError);\n          console.error('Resposta completa da IA:', text);\n          throw new Error(`Erro na resposta da IA. Formato JSON inv√°lido: ${jsonError?.message || 'Erro desconhecido'}`);\n        }\n\n      default:\n        throw new Error(`Tipo de conte√∫do n√£o suportado: ${type}`);\n    }\n  } catch (error: any) {\n    console.error('‚ùå Erro ao gerar conte√∫do:', error);\n\n    // Tratamento espec√≠fico de erros comuns\n    if (error.message?.includes('API key')) {\n      throw new Error('API key do Gemini n√£o configurada. Configure REACT_APP_GEMINI_API_KEY no arquivo .env');\n    }\n\n    if (error.message?.includes('quota') || error.message?.includes('limit')) {\n      throw new Error('Limite de uso da API do Gemini excedido. Tente novamente mais tarde');\n    }\n\n    if (error.message?.includes('network') || error.message?.includes('fetch')) {\n      throw new Error('Erro de conex√£o. Verifique sua internet e tente novamente');\n    }\n\n    // Erro gen√©rico com mais detalhes\n    throw new Error(`Falha ao gerar conte√∫do: ${error.message || 'Erro desconhecido'}`);\n  }\n}\n\n// Fun√ß√£o legada para compatibilidade (gera todos os tipos de conte√∫do)\nexport const processDocuments = async (documents: DocumentFile[], additionalInfo: string, projectId?: string): Promise<ProjectScope> => {\n  console.log('üöÄ Iniciando processamento de documentos...');\n  console.log('üìÑ Documentos recebidos:', documents.length);\n  console.log('üìù Informa√ß√µes adicionais:', additionalInfo ? 'Sim' : 'N√£o');\n\n  try {\n    // Verificar API key primeiro\n    if (!API_KEY) {\n      throw new Error('API key do Gemini n√£o configurada. Configure REACT_APP_GEMINI_API_KEY no arquivo .env');\n    }\n    console.log('‚úÖ API key configurada');\n\n    let prContent = '';\n    let flowchartData: any = { nodes: [], edges: [] };\n    let tasksData: any = { epics: [], tasks: [] };\n\n    // Gerar PR\n    try {\n      console.log('üìã Gerando PR...');\n      prContent = await generateContent('pr', documents, additionalInfo, projectId);\n      console.log('‚úÖ PR gerado com sucesso:', prContent.length, 'caracteres');\n    } catch (error: any) {\n      console.error('‚ùå Erro ao gerar PR:', error.message);\n      prContent = `Erro ao gerar PR: ${error.message}`;\n    }\n\n    // Gerar flowchart\n    try {\n      console.log('üìä Gerando fluxograma...');\n      flowchartData = await generateContent('flowchart', documents, additionalInfo, projectId);\n      console.log('‚úÖ Fluxograma gerado:', flowchartData.nodes?.length || 0, 'n√≥s,', flowchartData.edges?.length || 0, 'conex√µes');\n    } catch (error: any) {\n      console.error('‚ùå Erro ao gerar fluxograma:', error.message);\n      flowchartData = { nodes: [], edges: [] };\n    }\n\n    // Gerar tasks\n    try {\n      console.log('üìù Gerando tasks...');\n      tasksData = await generateContent('tasks', documents, additionalInfo, projectId);\n      console.log('‚úÖ Tasks geradas:', tasksData.tasks?.length || 0, 'tasks,', tasksData.epics?.length || 0, '√©picos');\n    } catch (error: any) {\n      console.error('‚ùå Erro ao gerar tasks:', error.message);\n      tasksData = { epics: [], tasks: [] };\n    }\n\n    // Converter tasks para o formato esperado\n    const tasks: any[] = [];\n    if (tasksData.tasks && Array.isArray(tasksData.tasks)) {\n      tasksData.tasks.forEach((task: any, index: number) => {\n        tasks.push({\n          id: `task-${index + 1}`,\n          title: task.title,\n          description: task.description,\n          storyPoints: task.story_points,\n          status: 'pending',\n          category: task.category,\n          criteria: task.acceptance_criteria || []\n        });\n      });\n    }\n\n    const result = {\n      title: documents.length > 0 ? documents[0].name : 'Projeto',\n      description: prContent.substring(0, 200) + '...',\n      flowchart: flowchartData,\n      tasks: tasks\n    };\n\n    console.log('üéâ Processamento conclu√≠do com sucesso!');\n    return result;\n\n  } catch (error: any) {\n    console.error('‚ùå Erro cr√≠tico ao processar documentos:', error);\n\n    // Retornar resultado parcial se poss√≠vel\n    const fallbackResult: ProjectScope = {\n      title: documents.length > 0 ? documents[0].name : 'Projeto',\n      description: 'Erro ao processar documentos: ' + error.message,\n      flowchart: { nodes: [], edges: [] },\n      tasks: []\n    };\n\n    console.log('‚ö†Ô∏è Retornando resultado fallback devido ao erro');\n    return fallbackResult;\n  }\n}\n\nexport const extractTextFromFile = async (file: File): Promise<string> => {\n  // Implementa√ß√£o b√°sica para extra√ß√£o de texto\n  // Em um ambiente real, voc√™ precisaria de bibliotecas espec√≠ficas para cada tipo de arquivo\n\n  if (file.type === 'text/markdown' || file.type === 'text/plain') {\n    return await file.text();\n  } else if (file.type === 'application/pdf') {\n    // Para PDF, voc√™ precisaria de uma biblioteca como pdf-parse\n    throw new Error('Processamento de PDF ainda n√£o implementado');\n  } else if (file.type.includes('document')) {\n    // Para DOCX, voc√™ precisaria de uma biblioteca como mammoth\n    throw new Error('Processamento de DOCX ainda n√£o implementado');\n  }\n\n  return '';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}