{"ast":null,"code":"import{supabase}from'../lib/supabase';import{generateContent}from'./geminiService';// Interface para o conteúdo gerado pelo Gemini\n// Interface para o resultado do salvamento\n// Função principal para salvar todo o conteúdo gerado\nexport const saveGeneratedContent=async function(projectId,content){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const result={success:true,errors:[]};try{var _content$epics,_content$tasks,_result$errors$length,_result$errors7;// Salvar PR (documento técnico)\nif(options.savePR!==false){try{const prResult=await savePR(projectId,content.pr,options.prTitle);if(prResult.success){result.pr=prResult.data;}else{var _result$errors;(_result$errors=result.errors)===null||_result$errors===void 0?void 0:_result$errors.push(\"Erro ao salvar PR: \".concat(prResult.error));}}catch(error){var _result$errors2;(_result$errors2=result.errors)===null||_result$errors2===void 0?void 0:_result$errors2.push(\"Erro ao salvar PR: \".concat(error.message));}}// Salvar fluxograma\nif(options.saveFlowchart!==false){try{const flowchartResult=await saveFlowchart(projectId,content.flowchart,options.flowchartTitle);if(flowchartResult.success){result.flowchart=flowchartResult.data;}else{var _result$errors3;(_result$errors3=result.errors)===null||_result$errors3===void 0?void 0:_result$errors3.push(\"Erro ao salvar fluxograma: \".concat(flowchartResult.error));}}catch(error){var _result$errors4;(_result$errors4=result.errors)===null||_result$errors4===void 0?void 0:_result$errors4.push(\"Erro ao salvar fluxograma: \".concat(error.message));}}// Salvar épicos e tasks\nif(options.saveTasks!==false&&(((_content$epics=content.epics)===null||_content$epics===void 0?void 0:_content$epics.length)>0||((_content$tasks=content.tasks)===null||_content$tasks===void 0?void 0:_content$tasks.length)>0)){try{const tasksResult=await saveEpicsAndTasks(projectId,content.epics||[],content.tasks||[]);if(tasksResult.success){result.epics=tasksResult.epics;result.tasks=tasksResult.tasks;}else{var _result$errors5;(_result$errors5=result.errors)===null||_result$errors5===void 0?void 0:_result$errors5.push(\"Erro ao salvar tasks: \".concat(tasksResult.error));}}catch(error){var _result$errors6;(_result$errors6=result.errors)===null||_result$errors6===void 0?void 0:_result$errors6.push(\"Erro ao salvar tasks: \".concat(error.message));}}result.success=((_result$errors$length=(_result$errors7=result.errors)===null||_result$errors7===void 0?void 0:_result$errors7.length)!==null&&_result$errors$length!==void 0?_result$errors$length:0)===0;return result;}catch(error){result.success=false;if(result.errors){var _result$errors8;(_result$errors8=result.errors)===null||_result$errors8===void 0?void 0:_result$errors8.push(error.message);}else{result.errors=[error.message];}return result;}};// Função para salvar PR (documento técnico)\nexport const savePR=async(projectId,content,title)=>{try{const prData={title:title||\"Documento T\\xE9cnico - \".concat(new Date().toLocaleDateString('pt-BR')),description:content.substring(0,200)+'...',content:content,status:'draft',project_id:projectId};const{data,error}=await supabase.from('pull_requests').insert(prData).select().single();if(error){return{success:false,error:error.message};}return{success:true,data};}catch(error){return{success:false,error:error.message};}};// Função para validar e sanitizar fluxograma\nexport const validateAndSanitizeFlowchart=flowchart=>{try{// Verificar se é um objeto válido\nif(!flowchart||typeof flowchart!=='object'){console.error('Fluxograma não é um objeto válido');return null;}let nodes=flowchart.nodes;let edges=flowchart.edges;// Se nodes ou edges não existirem, tentar criar arrays vazios\nif(!Array.isArray(nodes)){console.warn('Nodes não é um array válido, criando array vazio');nodes=[];}if(!Array.isArray(edges)){console.warn('Edges não é um array válido, criando array vazio');edges=[];}// Validar e sanitizar nós\nconst sanitizedNodes=nodes.map((node,index)=>{if(!node||typeof node!=='object'){console.warn(\"N\\xF3 \".concat(index,\" inv\\xE1lido, pulando\"));return null;}return{id:node.id||\"node_\".concat(index),type:['input','process','output','decision'].includes(node.type)?node.type:'process',label:node.label||\"N\\xF3 \".concat(index+1),position:node.position&&typeof node.position.x==='number'&&typeof node.position.y==='number'?{x:Math.round(node.position.x),y:Math.round(node.position.y)}:{x:100+index*200,y:100}};}).filter(Boolean);// Criar um set de IDs válidos para validação\nconst validNodeIds=new Set(sanitizedNodes.map(node=>node.id));// Validar e sanitizar conexões\nconst sanitizedEdges=edges.map((edge,index)=>{if(!edge||typeof edge!=='object'){console.warn(\"Edge \".concat(index,\" inv\\xE1lido, pulando\"));return null;}// Verificar se source e target existem\nif(!validNodeIds.has(edge.source)||!validNodeIds.has(edge.target)){console.warn(\"Edge \".concat(index,\" referencia n\\xF3s inexistentes, pulando\"));return null;}return{id:edge.id||\"edge_\".concat(index),source:edge.source,target:edge.target,label:edge.label||undefined};}).filter(Boolean);// Verificar se há pelo menos um nó\nif(sanitizedNodes.length===0){console.error('Fluxograma deve ter pelo menos um nó');return null;}console.log(\"Fluxograma validado: \".concat(sanitizedNodes.length,\" n\\xF3s, \").concat(sanitizedEdges.length,\" conex\\xF5es\"));return{nodes:sanitizedNodes,edges:sanitizedEdges};}catch(error){console.error('Erro ao validar fluxograma:',error);return null;}};// Função para salvar fluxograma\nexport const saveFlowchart=async(projectId,flowchart,title)=>{try{// Validar e sanitizar o fluxograma\nconst sanitizedFlowchart=validateAndSanitizeFlowchart(flowchart);if(!sanitizedFlowchart){return{success:false,error:'Fluxograma inválido ou vazio'};}const flowchartData={title:title||\"Fluxograma - \".concat(new Date().toLocaleDateString('pt-BR')),description:\"Fluxograma gerado automaticamente com \".concat(sanitizedFlowchart.nodes.length,\" n\\xF3s e \").concat(sanitizedFlowchart.edges.length,\" conex\\xF5es\"),nodes:sanitizedFlowchart.nodes,edges:sanitizedFlowchart.edges,project_id:projectId};const{data,error}=await supabase.from('flowcharts').insert(flowchartData).select().single();if(error){return{success:false,error:error.message};}return{success:true,data};}catch(error){return{success:false,error:error.message};}};// Função para validar e sanitizar épicos\nexport const validateAndSanitizeEpics=epics=>{if(!Array.isArray(epics)){console.warn('Épicos não é um array válido');return[];}return epics.map((epic,index)=>{if(!epic||typeof epic!=='object'){console.warn(\"\\xC9pico \".concat(index,\" inv\\xE1lido, criando \\xE9pico padr\\xE3o\"));return{title:\"\\xC9pico \".concat(index+1),description:'Épico criado automaticamente',priority:'medium'};}return{title:epic.title||\"\\xC9pico \".concat(index+1),description:epic.description||'Sem descrição',priority:['low','medium','high'].includes(epic.priority)?epic.priority:'medium'};});};// Função para validar e sanitizar tasks\nexport const validateAndSanitizeTasks=(tasks,epicsCount)=>{if(!Array.isArray(tasks)){console.warn('Tasks não é um array válido');return[];}const validCategories=['frontend','backend','design','testing','devops','database','security','documentation','infrastructure','mobile','api'];return tasks.map((task,index)=>{if(!task||typeof task!=='object'){console.warn(\"Task \".concat(index,\" inv\\xE1lida, pulando\"));return null;}return{title:task.title||\"Task \".concat(index+1),description:task.description||'Sem descrição',story_points:[1,2,3,5,8,13].includes(task.story_points)?task.story_points:3,category:validCategories.includes(task.category)?task.category:'frontend',epic_index:typeof task.epic_index==='number'&&task.epic_index>=0&&task.epic_index<epicsCount?task.epic_index:0,acceptance_criteria:Array.isArray(task.acceptance_criteria)?task.acceptance_criteria:[],priority:['low','medium','high'].includes(task.priority)?task.priority:'medium'};}).filter(Boolean);};// Função para salvar épicos e tasks\nexport const saveEpicsAndTasks=async(projectId,epics,tasks)=>{try{// Validar e sanitizar épicos e tasks\nconst sanitizedEpics=validateAndSanitizeEpics(epics);const sanitizedTasks=validateAndSanitizeTasks(tasks,sanitizedEpics.length);console.log(\"Salvando \".concat(sanitizedEpics.length,\" \\xE9picos e \").concat(sanitizedTasks.length,\" tasks\"));const savedEpics=[];const savedTasks=[];// Salvar épicos primeiro\nfor(const epic of sanitizedEpics){const epicData={title:epic.title,description:epic.description,priority:epic.priority,status:'pending',project_id:projectId};const{data:epicResult,error:epicError}=await supabase.from('epics').insert(epicData).select().single();if(epicError){console.error('Erro ao salvar épico:',epicError);continue;}savedEpics.push(epicResult);}// Salvar tasks com referência aos épicos\nfor(const task of sanitizedTasks){const epic=savedEpics[task.epic_index];const taskData={title:task.title,description:task.description,story_points:task.story_points,status:'pending',category:task.category,epic_id:epic===null||epic===void 0?void 0:epic.id,project_id:projectId,criteria:task.acceptance_criteria};const{data:taskResult,error:taskError}=await supabase.from('tasks').insert(taskData).select().single();if(taskError){console.error('Erro ao salvar task:',taskError);continue;}savedTasks.push(taskResult);}return{success:true,epics:savedEpics,tasks:savedTasks};}catch(error){return{success:false,error:error.message};}};// Função para atualizar conteúdo existente\nexport const updateGeneratedContent=async function(projectId,content){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// Esta função seria implementada para atualizar conteúdo existente\n// Por enquanto, vamos apenas salvar como novo\nreturn await saveGeneratedContent(projectId,content,options);};// Função para verificar se o projeto existe\nexport const validateProject=async projectId=>{try{const{data,error}=await supabase.from('projects').select('id').eq('id',projectId).single();return!error&&!!data;}catch(error){return false;}};// Função completa de processamento: gerar e salvar conteúdo\nexport const processAndSaveProjectContent=async function(projectId,documents,additionalInfo){let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};const result={success:true,errors:[]};try{var _result$errors$length2,_result$errors12;// Validar projeto\nconst projectExists=await validateProject(projectId);if(!projectExists){var _result$errors9;result.success=false;(_result$errors9=result.errors)===null||_result$errors9===void 0?void 0:_result$errors9.push('Projeto não encontrado');return result;}// Gerar conteúdo usando Gemini\nconsole.log('Gerando conteúdo com Gemini...');const generatedContent={pr:'',flowchart:{nodes:[],edges:[]},epics:[],tasks:[]};// Gerar PR\nif(options.savePR!==false){try{console.log('Gerando documento técnico (PR)...');const prContent=await generateContent('pr',documents,additionalInfo);generatedContent.pr=prContent;}catch(error){var _result$errors0;(_result$errors0=result.errors)===null||_result$errors0===void 0?void 0:_result$errors0.push(\"Erro ao gerar PR: \".concat(error.message));}}// Gerar fluxograma\nif(options.saveFlowchart!==false){try{console.log('Gerando fluxograma...');const flowchartData=await generateContent('flowchart',documents,additionalInfo);generatedContent.flowchart=flowchartData;}catch(error){var _result$errors1;(_result$errors1=result.errors)===null||_result$errors1===void 0?void 0:_result$errors1.push(\"Erro ao gerar fluxograma: \".concat(error.message));}}// Gerar tasks e épicos\nif(options.saveTasks!==false){try{console.log('Gerando tasks e épicos...');const tasksData=await generateContent('tasks',documents,additionalInfo);if(tasksData.epics){generatedContent.epics=tasksData.epics.map(epic=>({title:epic.title,description:epic.description,priority:epic.priority||'medium'}));}if(tasksData.tasks){generatedContent.tasks=tasksData.tasks.map(task=>({title:task.title,description:task.description,story_points:task.story_points||1,category:task.category,epic_index:task.epic_index||0,acceptance_criteria:task.acceptance_criteria||[],priority:task.priority||'medium'}));}}catch(error){var _result$errors10;(_result$errors10=result.errors)===null||_result$errors10===void 0?void 0:_result$errors10.push(\"Erro ao gerar tasks: \".concat(error.message));}}// Salvar conteúdo gerado\nconsole.log('Salvando conteúdo no banco de dados...');const savedContent=await saveGeneratedContent(projectId,generatedContent,options);if(savedContent.errors&&savedContent.errors.length>0){var _result$errors11;(_result$errors11=result.errors)===null||_result$errors11===void 0?void 0:_result$errors11.push(...savedContent.errors);}result.success=((_result$errors$length2=(_result$errors12=result.errors)===null||_result$errors12===void 0?void 0:_result$errors12.length)!==null&&_result$errors$length2!==void 0?_result$errors$length2:0)===0;result.generatedContent=generatedContent;result.savedContent=savedContent;return result;}catch(error){result.success=false;if(result.errors){var _result$errors13;(_result$errors13=result.errors)===null||_result$errors13===void 0?void 0:_result$errors13.push(error.message);}else{result.errors=[error.message];}return result;}};","map":{"version":3,"names":["supabase","generateContent","saveGeneratedContent","projectId","content","options","arguments","length","undefined","result","success","errors","_content$epics","_content$tasks","_result$errors$length","_result$errors7","savePR","prResult","pr","prTitle","data","_result$errors","push","concat","error","_result$errors2","message","saveFlowchart","flowchartResult","flowchart","flowchartTitle","_result$errors3","_result$errors4","saveTasks","epics","tasks","tasksResult","saveEpicsAndTasks","_result$errors5","_result$errors6","_result$errors8","title","prData","Date","toLocaleDateString","description","substring","status","project_id","from","insert","select","single","validateAndSanitizeFlowchart","console","nodes","edges","Array","isArray","warn","sanitizedNodes","map","node","index","id","type","includes","label","position","x","y","Math","round","filter","Boolean","validNodeIds","Set","sanitizedEdges","edge","has","source","target","log","sanitizedFlowchart","flowchartData","validateAndSanitizeEpics","epic","priority","validateAndSanitizeTasks","epicsCount","validCategories","task","story_points","category","epic_index","acceptance_criteria","sanitizedEpics","sanitizedTasks","savedEpics","savedTasks","epicData","epicResult","epicError","taskData","epic_id","criteria","taskResult","taskError","updateGeneratedContent","validateProject","eq","processAndSaveProjectContent","documents","additionalInfo","_result$errors$length2","_result$errors12","projectExists","_result$errors9","generatedContent","prContent","_result$errors0","_result$errors1","tasksData","_result$errors10","savedContent","_result$errors11","_result$errors13"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/services/projectContentService.ts"],"sourcesContent":["import { supabase, Project, Epic, Task, PullRequest, Flowchart } from '../lib/supabase';\nimport { generateContent } from './geminiService';\nimport { DocumentFile } from '../types';\n\n// Interface para o conteúdo gerado pelo Gemini\nexport interface GeneratedContent {\n  pr: string;\n  flowchart: {\n    nodes: any[];\n    edges: any[];\n  };\n  epics: Array<{\n    title: string;\n    description?: string;\n    priority: 'low' | 'medium' | 'high';\n  }>;\n  tasks: Array<{\n    title: string;\n    description?: string;\n    story_points: number;\n    category?: string;\n    epic_index: number;\n    acceptance_criteria?: string[];\n    priority: 'low' | 'medium' | 'high';\n  }>;\n}\n\n// Interface para o resultado do salvamento\nexport interface SaveContentResult {\n  success: boolean;\n  pr?: PullRequest;\n  flowchart?: Flowchart;\n  epics?: Epic[];\n  tasks?: Task[];\n  errors?: string[];\n}\n\n// Função principal para salvar todo o conteúdo gerado\nexport const saveGeneratedContent = async (\n  projectId: string,\n  content: GeneratedContent,\n  options: {\n    savePR?: boolean;\n    saveFlowchart?: boolean;\n    saveTasks?: boolean;\n    prTitle?: string;\n    flowchartTitle?: string;\n  } = {}\n): Promise<SaveContentResult> => {\n  const result: SaveContentResult = {\n    success: true,\n    errors: []\n  };\n\n  try {\n    // Salvar PR (documento técnico)\n    if (options.savePR !== false) {\n      try {\n        const prResult = await savePR(projectId, content.pr, options.prTitle);\n        if (prResult.success) {\n          result.pr = prResult.data;\n        } else {\n          result.errors?.push(`Erro ao salvar PR: ${prResult.error}`);\n        }\n      } catch (error: any) {\n        result.errors?.push(`Erro ao salvar PR: ${error.message}`);\n      }\n    }\n\n    // Salvar fluxograma\n    if (options.saveFlowchart !== false) {\n      try {\n        const flowchartResult = await saveFlowchart(projectId, content.flowchart, options.flowchartTitle);\n        if (flowchartResult.success) {\n          result.flowchart = flowchartResult.data;\n        } else {\n          result.errors?.push(`Erro ao salvar fluxograma: ${flowchartResult.error}`);\n        }\n      } catch (error: any) {\n        result.errors?.push(`Erro ao salvar fluxograma: ${error.message}`);\n      }\n    }\n\n    // Salvar épicos e tasks\n    if (options.saveTasks !== false && (content.epics?.length > 0 || content.tasks?.length > 0)) {\n      try {\n        const tasksResult = await saveEpicsAndTasks(projectId, content.epics || [], content.tasks || []);\n        if (tasksResult.success) {\n          result.epics = tasksResult.epics;\n          result.tasks = tasksResult.tasks;\n        } else {\n          result.errors?.push(`Erro ao salvar tasks: ${tasksResult.error}`);\n        }\n      } catch (error: any) {\n        result.errors?.push(`Erro ao salvar tasks: ${error.message}`);\n      }\n    }\n\n    result.success = (result.errors?.length ?? 0) === 0;\n    return result;\n  } catch (error: any) {\n    result.success = false;\n    if (result.errors) {\n      result.errors?.push(error.message);\n    } else {\n      result.errors = [error.message];\n    }\n    return result;\n  }\n};\n\n// Função para salvar PR (documento técnico)\nexport const savePR = async (\n  projectId: string,\n  content: string,\n  title?: string\n): Promise<{ success: boolean; data?: PullRequest; error?: string }> => {\n  try {\n    const prData = {\n      title: title || `Documento Técnico - ${new Date().toLocaleDateString('pt-BR')}`,\n      description: content.substring(0, 200) + '...',\n      content: content,\n      status: 'draft' as const,\n      project_id: projectId\n    };\n\n    const { data, error } = await supabase\n      .from('pull_requests')\n      .insert(prData)\n      .select()\n      .single();\n\n    if (error) {\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, data };\n  } catch (error: any) {\n    return { success: false, error: error.message };\n  }\n};\n\n// Função para validar e sanitizar fluxograma\nexport const validateAndSanitizeFlowchart = (flowchart: any): { nodes: any[]; edges: any[] } | null => {\n  try {\n    // Verificar se é um objeto válido\n    if (!flowchart || typeof flowchart !== 'object') {\n      console.error('Fluxograma não é um objeto válido');\n      return null;\n    }\n\n    let nodes = flowchart.nodes;\n    let edges = flowchart.edges;\n\n    // Se nodes ou edges não existirem, tentar criar arrays vazios\n    if (!Array.isArray(nodes)) {\n      console.warn('Nodes não é um array válido, criando array vazio');\n      nodes = [];\n    }\n\n    if (!Array.isArray(edges)) {\n      console.warn('Edges não é um array válido, criando array vazio');\n      edges = [];\n    }\n\n    // Validar e sanitizar nós\n    const sanitizedNodes = nodes.map((node: any, index: number) => {\n      if (!node || typeof node !== 'object') {\n        console.warn(`Nó ${index} inválido, pulando`);\n        return null;\n      }\n\n      return {\n        id: node.id || `node_${index}`,\n        type: ['input', 'process', 'output', 'decision'].includes(node.type) ? node.type : 'process',\n        label: node.label || `Nó ${index + 1}`,\n        position: node.position && typeof node.position.x === 'number' && typeof node.position.y === 'number'\n          ? { x: Math.round(node.position.x), y: Math.round(node.position.y) }\n          : { x: 100 + (index * 200), y: 100 }\n      };\n    }).filter(Boolean);\n\n    // Criar um set de IDs válidos para validação\n    const validNodeIds = new Set(sanitizedNodes.map((node: any) => node.id));\n\n    // Validar e sanitizar conexões\n    const sanitizedEdges = edges.map((edge: any, index: number) => {\n      if (!edge || typeof edge !== 'object') {\n        console.warn(`Edge ${index} inválido, pulando`);\n        return null;\n      }\n\n      // Verificar se source e target existem\n      if (!validNodeIds.has(edge.source) || !validNodeIds.has(edge.target)) {\n        console.warn(`Edge ${index} referencia nós inexistentes, pulando`);\n        return null;\n      }\n\n      return {\n        id: edge.id || `edge_${index}`,\n        source: edge.source,\n        target: edge.target,\n        label: edge.label || undefined\n      };\n    }).filter(Boolean);\n\n    // Verificar se há pelo menos um nó\n    if (sanitizedNodes.length === 0) {\n      console.error('Fluxograma deve ter pelo menos um nó');\n      return null;\n    }\n\n    console.log(`Fluxograma validado: ${sanitizedNodes.length} nós, ${sanitizedEdges.length} conexões`);\n    return { nodes: sanitizedNodes, edges: sanitizedEdges };\n  } catch (error) {\n    console.error('Erro ao validar fluxograma:', error);\n    return null;\n  }\n};\n\n// Função para salvar fluxograma\nexport const saveFlowchart = async (\n  projectId: string,\n  flowchart: { nodes: any[]; edges: any[] },\n  title?: string\n): Promise<{ success: boolean; data?: Flowchart; error?: string }> => {\n  try {\n    // Validar e sanitizar o fluxograma\n    const sanitizedFlowchart = validateAndSanitizeFlowchart(flowchart);\n    if (!sanitizedFlowchart) {\n      return { success: false, error: 'Fluxograma inválido ou vazio' };\n    }\n\n    const flowchartData = {\n      title: title || `Fluxograma - ${new Date().toLocaleDateString('pt-BR')}`,\n      description: `Fluxograma gerado automaticamente com ${sanitizedFlowchart.nodes.length} nós e ${sanitizedFlowchart.edges.length} conexões`,\n      nodes: sanitizedFlowchart.nodes,\n      edges: sanitizedFlowchart.edges,\n      project_id: projectId\n    };\n\n    const { data, error } = await supabase\n      .from('flowcharts')\n      .insert(flowchartData)\n      .select()\n      .single();\n\n    if (error) {\n      return { success: false, error: error.message };\n    }\n\n    return { success: true, data };\n  } catch (error: any) {\n    return { success: false, error: error.message };\n  }\n};\n\n// Função para validar e sanitizar épicos\nexport const validateAndSanitizeEpics = (epics: any[]): Array<{ title: string; description?: string; priority: 'low' | 'medium' | 'high' }> => {\n  if (!Array.isArray(epics)) {\n    console.warn('Épicos não é um array válido');\n    return [];\n  }\n\n  return epics.map((epic, index) => {\n    if (!epic || typeof epic !== 'object') {\n      console.warn(`Épico ${index} inválido, criando épico padrão`);\n      return {\n        title: `Épico ${index + 1}`,\n        description: 'Épico criado automaticamente',\n        priority: 'medium' as const\n      };\n    }\n\n    return {\n      title: epic.title || `Épico ${index + 1}`,\n      description: epic.description || 'Sem descrição',\n      priority: ['low', 'medium', 'high'].includes(epic.priority) ? epic.priority : 'medium'\n    };\n  });\n};\n\n// Função para validar e sanitizar tasks\nexport const validateAndSanitizeTasks = (tasks: any[], epicsCount: number): Array<{\n  title: string;\n  description?: string;\n  story_points: number;\n  category?: string;\n  epic_index: number;\n  acceptance_criteria?: string[];\n  priority: 'low' | 'medium' | 'high';\n}> => {\n  if (!Array.isArray(tasks)) {\n    console.warn('Tasks não é um array válido');\n    return [];\n  }\n\n  const validCategories = [\n    'frontend', 'backend', 'design', 'testing', 'devops',\n    'database', 'security', 'documentation', 'infrastructure',\n    'mobile', 'api'\n  ];\n\n  return tasks.map((task, index) => {\n    if (!task || typeof task !== 'object') {\n      console.warn(`Task ${index} inválida, pulando`);\n      return null;\n    }\n\n    return {\n      title: task.title || `Task ${index + 1}`,\n      description: task.description || 'Sem descrição',\n      story_points: [1, 2, 3, 5, 8, 13].includes(task.story_points) ? task.story_points : 3,\n      category: validCategories.includes(task.category) ? task.category : 'frontend',\n      epic_index: typeof task.epic_index === 'number' && task.epic_index >= 0 && task.epic_index < epicsCount\n        ? task.epic_index\n        : 0,\n      acceptance_criteria: Array.isArray(task.acceptance_criteria) ? task.acceptance_criteria : [],\n      priority: ['low', 'medium', 'high'].includes(task.priority) ? task.priority : 'medium'\n    };\n  }).filter(Boolean) as any[];\n};\n\n// Função para salvar épicos e tasks\nexport const saveEpicsAndTasks = async (\n  projectId: string,\n  epics: Array<{ title: string; description?: string; priority: 'low' | 'medium' | 'high' }>,\n  tasks: Array<{\n    title: string;\n    description?: string;\n    story_points: number;\n    category?: string;\n    epic_index: number;\n    acceptance_criteria?: string[];\n    priority: 'low' | 'medium' | 'high';\n  }>\n): Promise<{ success: boolean; epics?: Epic[]; tasks?: Task[]; error?: string }> => {\n  try {\n    // Validar e sanitizar épicos e tasks\n    const sanitizedEpics = validateAndSanitizeEpics(epics);\n    const sanitizedTasks = validateAndSanitizeTasks(tasks, sanitizedEpics.length);\n\n    console.log(`Salvando ${sanitizedEpics.length} épicos e ${sanitizedTasks.length} tasks`);\n\n    const savedEpics: Epic[] = [];\n    const savedTasks: Task[] = [];\n\n    // Salvar épicos primeiro\n    for (const epic of sanitizedEpics) {\n      const epicData = {\n        title: epic.title,\n        description: epic.description,\n        priority: epic.priority,\n        status: 'pending' as const,\n        project_id: projectId\n      };\n\n      const { data: epicResult, error: epicError } = await supabase\n        .from('epics')\n        .insert(epicData)\n        .select()\n        .single();\n\n      if (epicError) {\n        console.error('Erro ao salvar épico:', epicError);\n        continue;\n      }\n\n      savedEpics.push(epicResult);\n    }\n\n    // Salvar tasks com referência aos épicos\n    for (const task of sanitizedTasks) {\n      const epic = savedEpics[task.epic_index];\n      const taskData = {\n        title: task.title,\n        description: task.description,\n        story_points: task.story_points,\n        status: 'pending' as const,\n        category: task.category,\n        epic_id: epic?.id,\n        project_id: projectId,\n        criteria: task.acceptance_criteria\n      };\n\n      const { data: taskResult, error: taskError } = await supabase\n        .from('tasks')\n        .insert(taskData)\n        .select()\n        .single();\n\n      if (taskError) {\n        console.error('Erro ao salvar task:', taskError);\n        continue;\n      }\n\n      savedTasks.push(taskResult);\n    }\n\n    return { success: true, epics: savedEpics, tasks: savedTasks };\n  } catch (error: any) {\n    return { success: false, error: error.message };\n  }\n};\n\n// Função para atualizar conteúdo existente\nexport const updateGeneratedContent = async (\n  projectId: string,\n  content: Partial<GeneratedContent>,\n  options: {\n    savePR?: boolean;\n    saveFlowchart?: boolean;\n    saveTasks?: boolean;\n    prTitle?: string;\n    flowchartTitle?: string;\n  } = {}\n): Promise<SaveContentResult> => {\n  // Esta função seria implementada para atualizar conteúdo existente\n  // Por enquanto, vamos apenas salvar como novo\n  return await saveGeneratedContent(projectId, content as GeneratedContent, options);\n};\n\n// Função para verificar se o projeto existe\nexport const validateProject = async (projectId: string): Promise<boolean> => {\n  try {\n    const { data, error } = await supabase\n      .from('projects')\n      .select('id')\n      .eq('id', projectId)\n      .single();\n\n    return !error && !!data;\n  } catch (error) {\n    return false;\n  }\n};\n\n// Função completa de processamento: gerar e salvar conteúdo\nexport const processAndSaveProjectContent = async (\n  projectId: string,\n  documents: DocumentFile[],\n  additionalInfo: string,\n  options: {\n    savePR?: boolean;\n    saveFlowchart?: boolean;\n    saveTasks?: boolean;\n    prTitle?: string;\n    flowchartTitle?: string;\n  } = {}\n): Promise<{\n  success: boolean;\n  generatedContent?: GeneratedContent;\n  savedContent?: SaveContentResult;\n  errors: string[];\n}> => {\n  const result: {\n    success: boolean;\n    errors: string[];\n    generatedContent?: GeneratedContent;\n    savedContent?: SaveContentResult;\n  } = {\n    success: true,\n    errors: []\n  };\n\n  try {\n    // Validar projeto\n    const projectExists = await validateProject(projectId);\n    if (!projectExists) {\n      result.success = false;\n      result.errors?.push('Projeto não encontrado');\n      return result;\n    }\n\n    // Gerar conteúdo usando Gemini\n    console.log('Gerando conteúdo com Gemini...');\n\n    const generatedContent: GeneratedContent = {\n      pr: '',\n      flowchart: { nodes: [], edges: [] },\n      epics: [],\n      tasks: []\n    };\n\n    // Gerar PR\n    if (options.savePR !== false) {\n      try {\n        console.log('Gerando documento técnico (PR)...');\n        const prContent = await generateContent('pr', documents, additionalInfo);\n        generatedContent.pr = prContent;\n      } catch (error: any) {\n        result.errors?.push(`Erro ao gerar PR: ${error.message}`);\n      }\n    }\n\n    // Gerar fluxograma\n    if (options.saveFlowchart !== false) {\n      try {\n        console.log('Gerando fluxograma...');\n        const flowchartData = await generateContent('flowchart', documents, additionalInfo);\n        generatedContent.flowchart = flowchartData;\n      } catch (error: any) {\n        result.errors?.push(`Erro ao gerar fluxograma: ${error.message}`);\n      }\n    }\n\n    // Gerar tasks e épicos\n    if (options.saveTasks !== false) {\n      try {\n        console.log('Gerando tasks e épicos...');\n        const tasksData = await generateContent('tasks', documents, additionalInfo);\n\n        if (tasksData.epics) {\n          generatedContent.epics = tasksData.epics.map((epic: any) => ({\n            title: epic.title,\n            description: epic.description,\n            priority: epic.priority || 'medium'\n          }));\n        }\n\n        if (tasksData.tasks) {\n          generatedContent.tasks = tasksData.tasks.map((task: any) => ({\n            title: task.title,\n            description: task.description,\n            story_points: task.story_points || 1,\n            category: task.category,\n            epic_index: task.epic_index || 0,\n            acceptance_criteria: task.acceptance_criteria || [],\n            priority: task.priority || 'medium'\n          }));\n        }\n      } catch (error: any) {\n        result.errors?.push(`Erro ao gerar tasks: ${error.message}`);\n      }\n    }\n\n    // Salvar conteúdo gerado\n    console.log('Salvando conteúdo no banco de dados...');\n    const savedContent = await saveGeneratedContent(projectId, generatedContent, options);\n\n    if (savedContent.errors && savedContent.errors.length > 0) {\n      result.errors?.push(...savedContent.errors);\n    }\n\n    result.success = (result.errors?.length ?? 0) === 0;\n    result.generatedContent = generatedContent;\n    result.savedContent = savedContent;\n\n    return result;\n  } catch (error: any) {\n    result.success = false;\n    if (result.errors) {\n      result.errors?.push(error.message);\n    } else {\n      result.errors = [error.message];\n    }\n    return result;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}