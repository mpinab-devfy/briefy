{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Routes,Route,Navigate,useNavigate}from'react-router-dom';import{LoginPage}from'./components/LoginPage';import{projects}from'./lib/supabase';import{saveGeneratedContent}from'./services/projectContentService';import{HomePage,ProjectsPage,FlowchartsPage,SettingsPage}from'./pages';import{MainLayout}from'./layouts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Authentication states\nconst[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);// Project states\nconst[currentProject,setCurrentProject]=useState(null);const[selectedProject,setSelectedProject]=useState(null);const[selectedProjectContent,setSelectedProjectContent]=useState(null);// New states for advanced features\nconst[currentSession,setCurrentSession]=useState(null);// New handlers for advanced features\nconst handleStartSession=()=>{const newSession={id:\"session-\".concat(Date.now()),title:'Nova Sessão de Processamento',description:'Sessão criada automaticamente',status:'preparing',currentStep:'Preparação do Material',documents:[],videos:[],supportMaterials:{tasks:{id:'default-tasks',name:'Material de Apoio - Tasks',type:'tasks',content:'Material padrão para geração de tasks',isDefault:true,createdAt:new Date(),updatedAt:new Date()},flowchart:{id:'default-flowchart',name:'Material de Apoio - Fluxograma',type:'flowchart',content:'Material padrão para geração de fluxograma',isDefault:true,createdAt:new Date(),updatedAt:new Date()},pr:{id:'default-pr',name:'Material de Apoio - PR',type:'pr',content:'Material padrão para geração de PR',isDefault:true,createdAt:new Date(),updatedAt:new Date()}},createdAt:new Date(),updatedAt:new Date()};setCurrentSession(newSession);};const handleUpdateSession=session=>{setCurrentSession(session);};// Project handlers\nconst handleCreateProject=(projectName,mode)=>{const newProject={id:\"project-\".concat(Date.now()),name:projectName,description:\"Projeto criado via \".concat(mode==='briefy'?'Briefy':'Manual'),user_id:(user===null||user===void 0?void 0:user.id)||'current-user',created_at:new Date().toISOString(),updated_at:new Date().toISOString()};setCurrentProject(newProject);console.log(\"Projeto criado: \".concat(projectName,\" no modo \").concat(mode));};const handleProjectCreated=async(project,scope)=>{console.log('Projeto sendo processado:',project);console.log('Dados do scope:',scope);let savedProject=project;try{// Salvar o projeto no banco de dados primeiro\nconst{data:dbProject,error}=await projects.create(project.name,project.description);if(error){console.error('Erro ao salvar projeto no banco:',error);// Mesmo com erro, continuar com o fluxo para não bloquear o usuário\n}else{console.log('Projeto salvo no banco:',dbProject);savedProject=dbProject;setCurrentProject(dbProject);}// Salvar o conteúdo gerado (PR, fluxograma, tasks) no banco\nif(scope&&savedProject){try{console.log('Salvando conteúdo gerado no banco...');// Preparar dados no formato esperado pelo saveGeneratedContent\nconst generatedContent={pr:scope.pr||'',flowchart:scope.flowchart||{nodes:[],edges:[]},epics:scope.epics||[],tasks:scope.tasks||[]};const saveResult=await saveGeneratedContent(savedProject.id,generatedContent,{savePR:true,saveFlowchart:true,saveTasks:true});if(saveResult.success){var _saveResult$epics,_saveResult$tasks;console.log('✅ Conteúdo salvo com sucesso:',{pr:!!saveResult.pr,flowchart:!!saveResult.flowchart,epics:((_saveResult$epics=saveResult.epics)===null||_saveResult$epics===void 0?void 0:_saveResult$epics.length)||0,tasks:((_saveResult$tasks=saveResult.tasks)===null||_saveResult$tasks===void 0?void 0:_saveResult$tasks.length)||0});}else{console.error('❌ Erro ao salvar conteúdo:',saveResult.errors);}}catch(contentError){console.error('❌ Erro ao salvar conteúdo gerado:',contentError);}}}catch(error){console.error('Erro crítico ao processar projeto:',error);}console.log('Projeto criado com sucesso:',savedProject);// Navegar automaticamente para a página do projeto após criação\nsetTimeout(()=>{window.location.href='/projetos';},1000);// Pequeno delay para permitir que o usuário veja a confirmação\n};// Authentication handlers\nconst handleLoginSuccess=authUser=>{setUser(authUser);setIsAuthenticated(true);};// Login Screen - Only show when not authenticated (exclusive page)\nif(!isAuthenticated){return/*#__PURE__*/_jsx(LoginPage,{onLoginSuccess:handleLoginSuccess});}// Component that uses navigation hooks\nconst AppWithNavigation=()=>{const navigate=useNavigate();const handleProjectSelectedWithNav=(project,contentType)=>{console.log('App: handleProjectSelectedWithNav called',{project:project.name,contentType});if(contentType){console.log('App: setting selected project content');// Set the selected project content to show in the current page\nsetSelectedProjectContent({project,contentType});setSelectedProject(null);// Clear selected project since we have content\n// Navigate based on content type\nswitch(contentType){case'pr':// Navigate to projects page to show PR content\nnavigate('/projetos');break;case'tasks':// Navigate to projects page to show tasks content\nnavigate('/projetos');break;case'flowchart':// Stay on projects page to show flowchart content\nnavigate('/projetos');break;default:navigate('/projetos');break;}}else{console.log('App: setting selected project (no content type)');// Just set the selected project - this will show the content selection screen\nsetSelectedProject(project);setSelectedProjectContent(null);// Clear any previous content selection\nnavigate('/projetos');}};const handleCreateNewProjectWithNav=()=>{navigate('/');};return/*#__PURE__*/_jsx(MainLayout,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{user:user,currentProject:currentProject,currentSession:currentSession,onStartSession:handleStartSession,onCreateProject:handleCreateProject,onProjectCreated:handleProjectCreated,onUpdateSession:handleUpdateSession,onCreateNewProject:handleCreateNewProjectWithNav,onProjectSelected:handleProjectSelectedWithNav})}),/*#__PURE__*/_jsx(Route,{path:\"/projetos\",element:/*#__PURE__*/_jsx(ProjectsPage,{user:user,onProjectSelected:handleProjectSelectedWithNav,onCreateNewProject:handleCreateNewProjectWithNav,selectedProject:selectedProject,selectedProjectContent:selectedProjectContent,onBack:()=>{console.log('App: onBack called');if(selectedProjectContent){console.log('App: clearing selectedProjectContent');setSelectedProjectContent(null);}else if(selectedProject){console.log('App: clearing selectedProject');setSelectedProject(null);}}})}),/*#__PURE__*/_jsx(Route,{path:\"/fluxogramas\",element:/*#__PURE__*/_jsx(FlowchartsPage,{user:user,onProjectSelected:handleProjectSelectedWithNav})}),/*#__PURE__*/_jsx(Route,{path:\"/configuracoes\",element:/*#__PURE__*/_jsx(SettingsPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})});};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(AppWithNavigation,{})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","LoginPage","projects","saveGeneratedContent","HomePage","ProjectsPage","FlowchartsPage","SettingsPage","MainLayout","jsx","_jsx","jsxs","_jsxs","App","user","setUser","isAuthenticated","setIsAuthenticated","currentProject","setCurrentProject","selectedProject","setSelectedProject","selectedProjectContent","setSelectedProjectContent","currentSession","setCurrentSession","handleStartSession","newSession","id","concat","Date","now","title","description","status","currentStep","documents","videos","supportMaterials","tasks","name","type","content","isDefault","createdAt","updatedAt","flowchart","pr","handleUpdateSession","session","handleCreateProject","projectName","mode","newProject","user_id","created_at","toISOString","updated_at","console","log","handleProjectCreated","project","scope","savedProject","data","dbProject","error","create","generatedContent","nodes","edges","epics","saveResult","savePR","saveFlowchart","saveTasks","success","_saveResult$epics","_saveResult$tasks","length","errors","contentError","setTimeout","window","location","href","handleLoginSuccess","authUser","onLoginSuccess","AppWithNavigation","navigate","handleProjectSelectedWithNav","contentType","handleCreateNewProjectWithNav","children","path","element","onStartSession","onCreateProject","onProjectCreated","onUpdateSession","onCreateNewProject","onProjectSelected","onBack","to","replace"],"sources":["/Users/matheuspina/Desktop/briefy-new/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { LoginPage } from './components/LoginPage';\nimport { ProcessingSession } from './types';\nimport { Project, projects } from './lib/supabase';\nimport { saveGeneratedContent } from './services/projectContentService';\nimport { HomePage, ProjectsPage, FlowchartsPage, SettingsPage } from './pages';\nimport { MainLayout } from './layouts';\n\nfunction App() {\n  // Authentication states\n  const [user, setUser] = useState<any>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Project states\n  const [currentProject, setCurrentProject] = useState<Project | null>(null);\n  const [selectedProject, setSelectedProject] = useState<Project | null>(null);\n  const [selectedProjectContent, setSelectedProjectContent] = useState<{\n    project: Project;\n    contentType: 'pr' | 'tasks' | 'flowchart';\n  } | null>(null);\n\n  // New states for advanced features\n  const [currentSession, setCurrentSession] = useState<ProcessingSession | null>(null);\n\n\n\n  // New handlers for advanced features\n  const handleStartSession = () => {\n    const newSession: ProcessingSession = {\n      id: `session-${Date.now()}`,\n      title: 'Nova Sessão de Processamento',\n      description: 'Sessão criada automaticamente',\n      status: 'preparing',\n      currentStep: 'Preparação do Material',\n      documents: [],\n      videos: [],\n      supportMaterials: {\n        tasks: {\n          id: 'default-tasks',\n          name: 'Material de Apoio - Tasks',\n          type: 'tasks',\n          content: 'Material padrão para geração de tasks',\n          isDefault: true,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        },\n        flowchart: {\n          id: 'default-flowchart',\n          name: 'Material de Apoio - Fluxograma',\n          type: 'flowchart',\n          content: 'Material padrão para geração de fluxograma',\n          isDefault: true,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        },\n        pr: {\n          id: 'default-pr',\n          name: 'Material de Apoio - PR',\n          type: 'pr',\n          content: 'Material padrão para geração de PR',\n          isDefault: true,\n          createdAt: new Date(),\n          updatedAt: new Date()\n        }\n      },\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    setCurrentSession(newSession);\n  };\n\n  const handleUpdateSession = (session: ProcessingSession) => {\n    setCurrentSession(session);\n  };\n\n  // Project handlers\n  const handleCreateProject = (projectName: string, mode: 'briefy' | 'manual') => {\n    const newProject: Project = {\n      id: `project-${Date.now()}`,\n      name: projectName,\n      description: `Projeto criado via ${mode === 'briefy' ? 'Briefy' : 'Manual'}`,\n      user_id: user?.id || 'current-user',\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n    setCurrentProject(newProject);\n    console.log(`Projeto criado: ${projectName} no modo ${mode}`);\n  };\n\n  const handleProjectCreated = async (project: Project, scope: any) => {\n    console.log('Projeto sendo processado:', project);\n    console.log('Dados do scope:', scope);\n\n    let savedProject = project;\n\n    try {\n      // Salvar o projeto no banco de dados primeiro\n      const { data: dbProject, error } = await projects.create(project.name, project.description);\n\n      if (error) {\n        console.error('Erro ao salvar projeto no banco:', error);\n        // Mesmo com erro, continuar com o fluxo para não bloquear o usuário\n      } else {\n        console.log('Projeto salvo no banco:', dbProject);\n        savedProject = dbProject;\n        setCurrentProject(dbProject);\n      }\n\n      // Salvar o conteúdo gerado (PR, fluxograma, tasks) no banco\n      if (scope && savedProject) {\n        try {\n          console.log('Salvando conteúdo gerado no banco...');\n\n          // Preparar dados no formato esperado pelo saveGeneratedContent\n          const generatedContent = {\n            pr: scope.pr || '',\n            flowchart: scope.flowchart || { nodes: [], edges: [] },\n            epics: scope.epics || [],\n            tasks: scope.tasks || []\n          };\n\n          const saveResult = await saveGeneratedContent(savedProject.id, generatedContent, {\n            savePR: true,\n            saveFlowchart: true,\n            saveTasks: true\n          });\n\n          if (saveResult.success) {\n            console.log('✅ Conteúdo salvo com sucesso:', {\n              pr: !!saveResult.pr,\n              flowchart: !!saveResult.flowchart,\n              epics: saveResult.epics?.length || 0,\n              tasks: saveResult.tasks?.length || 0\n            });\n          } else {\n            console.error('❌ Erro ao salvar conteúdo:', saveResult.errors);\n          }\n        } catch (contentError) {\n          console.error('❌ Erro ao salvar conteúdo gerado:', contentError);\n        }\n      }\n\n    } catch (error) {\n      console.error('Erro crítico ao processar projeto:', error);\n    }\n\n    console.log('Projeto criado com sucesso:', savedProject);\n\n    // Navegar automaticamente para a página do projeto após criação\n    setTimeout(() => {\n      window.location.href = '/projetos';\n    }, 1000); // Pequeno delay para permitir que o usuário veja a confirmação\n  };\n\n\n\n\n\n  // Authentication handlers\n  const handleLoginSuccess = (authUser: any) => {\n    setUser(authUser);\n    setIsAuthenticated(true);\n  };\n\n  // Login Screen - Only show when not authenticated (exclusive page)\n  if (!isAuthenticated) {\n    return <LoginPage onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  // Component that uses navigation hooks\n  const AppWithNavigation = () => {\n    const navigate = useNavigate();\n\n    const handleProjectSelectedWithNav = (project: Project, contentType?: 'pr' | 'tasks' | 'flowchart') => {\n      console.log('App: handleProjectSelectedWithNav called', { project: project.name, contentType });\n\n      if (contentType) {\n        console.log('App: setting selected project content');\n        // Set the selected project content to show in the current page\n        setSelectedProjectContent({ project, contentType });\n        setSelectedProject(null); // Clear selected project since we have content\n\n        // Navigate based on content type\n        switch (contentType) {\n          case 'pr':\n            // Navigate to projects page to show PR content\n            navigate('/projetos');\n            break;\n          case 'tasks':\n            // Navigate to projects page to show tasks content\n            navigate('/projetos');\n            break;\n          case 'flowchart':\n            // Stay on projects page to show flowchart content\n            navigate('/projetos');\n            break;\n          default:\n            navigate('/projetos');\n            break;\n        }\n      } else {\n        console.log('App: setting selected project (no content type)');\n        // Just set the selected project - this will show the content selection screen\n        setSelectedProject(project);\n        setSelectedProjectContent(null); // Clear any previous content selection\n        navigate('/projetos');\n      }\n    };\n\n    const handleCreateNewProjectWithNav = () => {\n      navigate('/');\n    };\n\n    return (\n      <MainLayout>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <HomePage\n                user={user}\n                currentProject={currentProject}\n                currentSession={currentSession}\n                onStartSession={handleStartSession}\n                onCreateProject={handleCreateProject}\n                onProjectCreated={handleProjectCreated}\n                onUpdateSession={handleUpdateSession}\n                onCreateNewProject={handleCreateNewProjectWithNav}\n                onProjectSelected={handleProjectSelectedWithNav}\n              />\n            }\n          />\n\n          <Route\n            path=\"/projetos\"\n            element={\n              <ProjectsPage\n                user={user}\n                onProjectSelected={handleProjectSelectedWithNav}\n                onCreateNewProject={handleCreateNewProjectWithNav}\n                selectedProject={selectedProject}\n                selectedProjectContent={selectedProjectContent}\n                onBack={() => {\n                  console.log('App: onBack called');\n                  if (selectedProjectContent) {\n                    console.log('App: clearing selectedProjectContent');\n                    setSelectedProjectContent(null);\n                  } else if (selectedProject) {\n                    console.log('App: clearing selectedProject');\n                    setSelectedProject(null);\n                  }\n                }}\n              />\n            }\n          />\n\n          <Route\n            path=\"/fluxogramas\"\n            element={\n              <FlowchartsPage\n                user={user}\n                onProjectSelected={handleProjectSelectedWithNav}\n              />\n            }\n          />\n\n          <Route\n            path=\"/configuracoes\"\n            element={<SettingsPage />}\n          />\n\n          {/* Redirect to home for any unknown routes */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </MainLayout>\n    );\n  };\n\n  return (\n    <Router>\n      <AppWithNavigation />\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}