# Nginx configuration optimized for reverse proxy environments
# Use this configuration when deploying behind Traefik, Vercel, Coolify, etc.

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Trust proxy headers from reverse proxy
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    set_real_ip_from 0.0.0.0/0;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Proxy headers for reverse proxy environments
    add_header X-Forwarded-For $proxy_add_x_forwarded_for always;
    add_header X-Real-IP $remote_addr always;
    add_header X-Forwarded-Proto $scheme always;
    add_header X-Forwarded-Host $http_host always;
    add_header X-Forwarded-Port $server_port always;

    # Handle React Router - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers for SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Handle static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif|mp4|webm|ogg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Vary "Accept-Encoding" always;
        
        # Enable compression
        gzip_static on;
        gzip_vary on;
        
        # Handle missing files gracefully
        try_files $uri =404;
    }

    # Handle API routes with CORS
    location /api/ {
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Proxy to backend if needed
        # proxy_pass http://backend:3000;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type "text/plain; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Status endpoint for monitoring
    location /status {
        access_log off;
        return 200 "nginx is running\n";
        add_header Content-Type "text/plain; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Handle 404 errors gracefully - redirect to index.html for SPA
    error_page 404 /index.html;
    
    # Custom error pages
    location = /404.html {
        internal;
    }

    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: deny access to sensitive files
    location ~* \.(env|log|sql|conf|ini|bak|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}
